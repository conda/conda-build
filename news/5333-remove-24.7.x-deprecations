### Enhancements

* <news item>

### Bug fixes

* <news item>

### Deprecations

* Remove the following deprecations (#5333):
  * `conda_build.config.Config.override_channels` (use `conda.base.context.context.channels` instead)
  * `conda_build.config.noarch_python_build_age_default`
  * `conda_build.conda_interface.add_parser_channels` (use `conda.cli.helpers.add_parser_channels` instead)
  * `conda_build.conda_interface.add_parser_prefix` (use `conda.cli.helpers.add_parser_prefix` instead)
  * `conda_build.conda_interface.ArgumentParser` (use `conda.cli.conda_argparse.ArgumentParser` instead)
  * `conda_build.conda_interface.binstar_upload` (use `conda.base.context.context.binstar_upload` instead)
  * `conda_build.conda_interface.cc_conda_build` (use `conda.base.context.context.conda_build` instead)
  * `conda_build.conda_interface.cc_platform` (use `conda.base.context.context.platform` instead)
  * `conda_build.conda_interface.Channel` (use `conda.models.channel.Channel` instead)
  * `conda_build.conda_interface.Completer`
  * `conda_build.conda_interface.configparser` (use `configparser` instead)
  * `conda_build.conda_interface.CondaError` (use `conda.exceptions.CondaError` instead)
  * `conda_build.conda_interface.CondaHTTPError` (use `conda.exceptions.CondaHTTPError` instead)
  * `conda_build.conda_interface.CondaSession` (use `conda.gateways.connection.session.CondaSession` instead)
  * `conda_build.conda_interface.CONDA_VERSION` (use `conda.__version__` instead)
  * `conda_build.conda_interface.context` (use `conda.base.context.context` instead)
  * `conda_build.conda_interface.create_default_packages` (use `conda.base.context.context.create_default_packages` instead)
  * `conda_build.conda_interface.default_python` (use `conda.base.context.context.default_python` instead)
  * `conda_build.conda_interface.determine_target_prefix` (use `conda.base.context.determine_target_prefix` instead)
  * `conda_build.conda_interface.download` (use `conda.gateways.connection.download.download` instead)
  * `conda_build.conda_interface.env_path_backup_var_exists`
  * `conda_build.conda_interface.envs_dirs` (use `conda.base.context.context.envs_dirs` instead)
  * `conda_build.conda_interface.EntityEncoder` (use `conda.auxlib.entity.EntityEncoder` instead)
  * `conda_build.conda_interface.FileMode` (use `conda.models.enums.FileMode` instead)
  * `conda_build.conda_interface.get_conda_build_local_url` (use `conda.models.channel.get_conda_build_local_url` instead)
  * `conda_build.conda_interface.get_conda_channel` (use `conda.models.channel.Channel.from_value` instead)
  * `conda_build.conda_interface.get_prefix` (use `conda.base.context.context.target_prefix` instead)
  * `conda_build.conda_interface.get_rc_urls` (use `conda.base.context.context.channels` instead)
  * `conda_build.conda_interface.human_bytes` (use `conda.utils.human_bytes` instead)
  * `conda_build.conda_interface.import_module` (use `importlib.import_module` instead)
  * `conda_build.conda_interface.input` (use `input` instead)
  * `conda_build.conda_interface.InstalledPackages`
  * `conda_build.conda_interface.lchmod` (use `conda.gateways.disk.link.lchmod` instead)
  * `conda_build.conda_interface.LinkError` (use `conda.exceptions.LinkError` instead)
  * `conda_build.conda_interface.LockError` (use `conda.exceptions.LockError` instead)
  * `conda_build.conda_interface.MatchSpec` (use `conda.models.match_spec.MatchSpec` instead)
  * `conda_build.conda_interface.non_x86_linux_machines` (use `conda.base.context.non_x86_machines` instead)
  * `conda_build.conda_interface.NoPackagesFound` (use `conda.exceptions.ResolvePackageNotFound` instead)
  * `conda_build.conda_interface.NoPackagesFoundError` (use `conda.exceptions.NoPackagesFoundError` instead)
  * `conda_build.conda_interface.normalized_version` (use `conda.models.version.normalized_version` instead)
  * `conda_build.conda_interface.os` (use `os` instead)
  * `conda_build.conda_interface.PackageRecord` (use `conda.models.records.PackageRecord` instead)
  * `conda_build.conda_interface.PaddingError` (use `conda.exceptions.PaddingError` instead)
  * `conda_build.conda_interface.partial` (use `functools.partial` instead)
  * `conda_build.conda_interface.PathType` (use `conda.models.enums.PathType` instead)
  * `conda_build.conda_interface.pkgs_dirs` (use `conda.base.context.context.pkgs_dirs` instead)
  * `conda_build.conda_interface.prefix_placeholder` (use `conda.base.constants.PREFIX_PLACEHOLDER` instead)
  * `conda_build.conda_interface.ProgressiveFetchExtract` (use `conda.core.package_cache_data.ProgressiveFetchExtract` instead)
  * `conda_build.conda_interface.reset_context` (use `conda.base.context.reset_context` instead)
  * `conda_build.conda_interface.Resolve` (use `conda.resolve.Resolve` instead)
  * `conda_build.conda_interface.rm_rf` (use `conda_build.utils.rm_rf` instead)
  * `conda_build.conda_interface.root_dir` (use `conda.base.context.context.root_prefix` instead)
  * `conda_build.conda_interface.root_writable` (use `conda.base.context.context.root_writable` instead)
  * `conda_build.conda_interface.spec_from_line` (use `conda.cli.common.spec_from_line` instead)
  * `conda_build.conda_interface.specs_from_args` (use `conda.cli.common.specs_from_args` instead)
  * `conda_build.conda_interface.specs_from_url` (use `conda.cli.common.specs_from_url` instead)
  * `conda_build.conda_interface.StringIO` (use `io.StringIO` instead)
  * `conda_build.conda_interface.subdir` (use `conda.base.context.context.subdir` instead)
  * `conda_build.conda_interface.symlink_conda`
  * `conda_build.conda_interface.TemporaryDirectory` (use `conda.gateways.disk.create.TemporaryDirectory` instead)
  * `conda_build.conda_interface.TmpDownload` (use `conda.gateways.connection.download.TmpDownload` instead)
  * `conda_build.conda_interface._toposort` (use `conda.common.toposort._toposort` instead)
  * `conda_build.conda_interface.unix_path_to_win` (use `conda.utils.unix_path_to_win` instead)
  * `conda_build.conda_interface.untracked` (use `conda.misc.untracked` instead)
  * `conda_build.conda_interface.Unsatisfiable` (use `conda.exceptions.UnsatisfiableError` instead)
  * `conda_build.conda_interface.UnsatisfiableError` (use `conda.exceptions.UnsatisfiableError` instead)
  * `conda_build.conda_interface.url_path` (use `conda.utils.url_path` instead)
  * `conda_build.conda_interface.VersionOrder` (use `conda.models.version.VersionOrder` instead)
  * `conda_build.conda_interface.walk_prefix` (use `conda.misc.walk_prefix` instead)
  * `conda_build.conda_interface.win_path_to_unix` (use `conda.common.path.win_path_to_unix` instead)
  * `conda_build.index.channel_data`; `conda_build.index.get_build_index` return value for `channel_data` is now always `None`
  * `conda_build.utils._convert_lists_to_sets` (use `frozendict.deepfreeze` instead)
  * `conda_build.utils.HashableDict` (use `frozendict.deepfreeze` instead)
  * `conda_build.utils.represent_hashabledict` (use `frozendict.deepfreeze` instead)
  * `conda_build.utils.rm_rf(config)`
  * `conda_build.variants.get_vars(loop_only)`

### Docs

* <news item>

### Other

* <news item>
