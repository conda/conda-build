pr:
  autoCancel: true
  branches:
    include:
    - master

jobs:

- job: 'Windows'
  pool:
    vmImage: "vs2017-win2016"
  strategy:
    maxParallel: 10
    matrix:
      py27-release:
        PYTHON_VERSION: '2.7'
        CONDA_VERSION: 'release'
      py27-canary:
        PYTHON_VERSION: '2.7'
        CONDA_VERSION: 'canary'
      py37-canary:
        PYTHON_VERSION: '3.7'
        CONDA_VERSION: 'release'
      py37-release:
        PYTHON_VERSION: '3.7'
        CONDA_VERSION: 'canary'
  timeoutInMinutes: 480
  steps:
  - checkout: self
    persistCredentials: true
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'

  - script: |
      choco install vcpython27 -fdv -y --debug
    displayName: Install vcpython27.msi

  - script: |
      rmdir C:\Strawberry /s /q
      choco install wget
      echo CD is %CD%
      dir /s /q
      call ci\azurepipelines\install_conda_and_build_test_deps.bat %UserProfile%\Miniconda3
      start /wait "" Miniconda3-latest-Windows-x86_64.exe /InstallationType=JustMe /S /D=%UserProfile%\Miniconda3
      "%UserProfile%\Miniconda3\condabin\conda.bat" init
      conda info -a
    displayName: Install miniconda

  - powershell: |
      Set-PSDebug -Trace 1
      $batchcontent = @"
      ECHO ON
      SET vcpython=C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0
      DIR "%vcpython%"
      CALL "%vcpython%\vcvarsall.bat" %*
      "@
      $batchDir = "C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0\VC"
      $batchPath = "$batchDir" + "\vcvarsall.bat"
      New-Item -Path $batchPath -ItemType "file" -Force
      Set-Content -Value $batchcontent -Path $batchPath
      Get-ChildItem -Path $batchDir
      Get-ChildItem -Path ($batchDir + '\..')
      set LIB
    displayName: Patch vs2008

  - script: |
      echo on
      set PATH
      doskey conda="call %UserProfile%\Miniconda3\condabin\conda.bat" $*
      doskey /macros
      call "%UserProfile%\Miniconda3\condabin\conda.bat" init
      set PATH
    displayName: conda init

  - script: |
      echo on
      set PATH
      call %UserProfile%\Miniconda3\condabin\activate.bat base
      set PATH
      call conda install python="%PYTHON_VERSION%" -y
      if "%CONDA_VERSION%" == "canary" (call conda update -c conda-canary conda) else (call conda update -q conda)
      call conda config --set always_yes yes
      call conda config --set auto_update_conda no
      call conda info
      python -c "import sys; print(sys.version)"
      python -c "import sys; print(sys.executable)"
      python -c "import sys; print(sys.prefix)"
      call conda update -q --all
      call conda install -q pip python-libarchive-c pytest git pytest-cov jinja2 m2-patch flake8 mock requests contextlib2 chardet glob2 perl pyflakes pycrypto posix m2-git anaconda-client numpy beautifulsoup4 pytest-xdist pytest-mock filelock pkginfo psutil pytz tqdm conda-package-handling pytest-azurepipelines
      call conda install -c conda-forge pytest-replay pytest-rerunfailures -y
      echo safety_checks: disabled >> %UserProfile%\.condarc
      echo local_repodata_ttl: 1800 >> %UserProfile%\.condarc
      if "%PYTHON_VERSION%" == "2.7" call conda install -q scandir pathlib2
      if "%PYTHON_VERSION%" == "3.7" call conda install -q py-lief
      python --version
      python -c "import struct; print(struct.calcsize('P') * 8)"
      pip install --no-deps .
      conda-build --version
      pushd .. && git clone https://github.com/conda/conda_build_test_recipe  && popd
      mkdir %UserProfile%\cbtmp_serial
      mkdir %UserProfile%\cbtmp
      for /d %%F in (%UserProfile%\cbtmp_serial\*) do rd /s /q "%%F"
      for /d %%F in (%UserProfile%\cbtmp\*) do rd /s /q "%%F"
      call conda create -n blarg -yq --download-only python=2.7
      call conda create -n blarg -yq --download-only python=3.7
      call conda create -n blarg -yq --download-only python cmake
      mkdir $(Build.ArtifactStagingDirectory)\\pytest-replay
      set "PYTEST_REPLAY_OPTIONS=--replay-record-dir=$(Build.ArtifactStagingDirectory)\\pytest-replay"
      if "%PYTHON_VERSION%" NEQ "2.7" set "PYTEST_REPLAY_OPTIONS=--replay-record-dir=$(Build.ArtifactStagingDirectory)\\pytest-replay --replay-base-name=Win-%CONDA_VERSION%-Py%PYTHON_VERSION%"
      echo "##vso[task.setvariable variable=PYTEST_REPLAY_OPTIONS]%PYTEST_REPLAY_OPTIONS%"
    displayName: 'Configuration'

  - script: |
      echo on
      set PATH
      call %UserProfile%\Miniconda3\condabin\activate.bat base
      set PATH
      call conda install -y conda-verify
      set PERL=
      set LUA=
      set R=
      py.test --color=yes -v --cov conda_build --cov-report xml tests --basetemp %UserProfile%\cbtmp_serial -n 0 -m "serial" --test-run-title="Win-SerialTests-%CONDA_VERSION%-Python%PYTHON_VERSION%" %PYTEST_REPLAY_OPTIONS%
    displayName: 'Serial Tests'

  - script: |
      echo on
      set PATH
      call %UserProfile%\Miniconda3\condabin\activate.bat base
      set PATH
      call conda remove -y conda-verify
      set PERL=
      set LUA=
      set R=
      py.test --color=yes -v --cov conda_build --cov-report xml --cov-append tests --basetemp %UserProfile%\cbtmp -n auto -m "not serial" --test-run-title="Win-ParallelTests-%CONDA_VERSION%-Python%PYTHON_VERSION%" %PYTEST_REPLAY_OPTIONS%
    env:
      VS90COMNTOOLS: "C:\\Program Files (x86)\\Common Files\\Microsoft\\Visual C++ for Python\\9.0\\VC\\bin"
      LIB:
    displayName: 'Parallel Tests'

  - publish: $(Build.ArtifactStagingDirectory)/pytest-replay
    artifact: 'Win-$(CONDA_VERSION)-Python$(PYTHON_VERSION)'
    condition: always()
