trigger:
- master

jobs:

- job: 'Linux'
  pool:
    vmImage: ubuntu-16.04
  strategy:
    maxParallel: 10
    matrix:
      py27-release:
        PYTHON_VERSION: '2.7'
        CONDA_VERSION: 'release'
      py27-canary:
        PYTHON_VERSION: '2.7'
        CONDA_VERSION: 'canary'
      py37-canary:
        PYTHON_VERSION: '3.7'
        CONDA_VERSION: 'release'
      py37-release:
        PYTHON_VERSION: '3.7'
        CONDA_VERSION: 'canary'
  timeoutInMinutes: 480
  steps:
  - script: |
      sudo apt update
      sudo apt install attr -y
      conda info
      ps -ef | grep $$
      conda install python=$PYTHON_VERSION -y
      mkdir -p /usr/share/miniconda/locks
      mkdir -p /usr/share/miniconda/bin
      chmod -w /usr/share/miniconda/locks
      source /usr/share/miniconda/bin/activate
      if [ "$CONDA_VERSION" = "release" ]; then
        conda update -y conda;
      else
        conda install -y -c conda-canary conda;
      fi
      conda config --set always_yes yes
      conda config --set auto_update_conda False
      conda info
      # avoids a python 3.7 problem
      conda install -q cytoolz
      if [[ "$PYTHON_VERSION" == "2.7" ]]; then
        conda install -q futures scandir;
      fi
      conda install -q pytest-azurepipelines anaconda-client git requests filelock contextlib2 jinja2 patchelf ripgrep pyflakes beautifulsoup4 chardet pycrypto glob2 psutil pytz tqdm conda-package-handling py-lief python-libarchive-c conda-forge::shellcheck
      pip install pkginfo
      conda install -c c3i_test -q perl;
      conda install -q pytest pip pytest-cov pytest-forked pytest-xdist nomkl numpy mock pytest-mock;
      pushd .. && git clone https://github.com/conda/conda_build_test_recipe && popd;
      pip install --no-deps .
      conda info -a
    displayName: Preparing test environment

  - script: |
      conda install conda-verify -y
      /usr/share/miniconda/bin/py.test --color=yes -v -n 0 --basetemp /tmp/cb_serial --cov conda_build --cov-report xml -m "serial" tests --test-run-title="Linux-SerialTests-$CONDA_VERSION-Python$PYTHON_VERSION"
    displayName: 'Serial Tests'

  - script: |
      conda remove conda-verify -y
      echo "safety_checks: disabled" >> ~/.condarc
      echo "local_repodata_ttl: 1800" >> ~/.condarc
      mkdir -p ~/.conda
      conda create -n blarg1 -yq python=2.7
      conda create -n blarg3 -yq python=3.7
      conda create -n blarg4 -yq python nomkl numpy pandas svn
      source /usr/share/miniconda/bin/activate
      py.test --color=yes -v -n auto --basetemp /tmp/cb --cov conda_build --cov-append --cov-report xml -m "not serial" tests --test-run-title="Linux-ParallelTests-$CONDA_VERSION-Python$PYTHON_VERSION"
    displayName: 'Parallel Tests'


- job: 'Windows'
  pool:
    vmImage: "vs2017-win2016"
  strategy:
    maxParallel: 10
    matrix:
      py27-release:
        PYTHON_VERSION: '2.7'
        CONDA_VERSION: 'release'
      py27-canary:
        PYTHON_VERSION: '2.7'
        CONDA_VERSION: 'canary'
      py37-canary:
        PYTHON_VERSION: '3.7'
        CONDA_VERSION: 'release'
      py37-release:
        PYTHON_VERSION: '3.7'
        CONDA_VERSION: 'canary'
  timeoutInMinutes: 480
  steps:
  - checkout: self
    persistCredentials: true
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'

  - script: |
      choco install vcpython27 -fdv -y --debug
    displayName: Install vcpython27.msi 

  - script: |
      rmdir C:\Strawberry /s /q
      choco install wget
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe
      start /wait "" Miniconda3-latest-Windows-x86_64.exe /InstallationType=JustMe /S /D=%UserProfile%\Miniconda3
      set PATH=%UserProfile%\Miniconda3;%UserProfile%\Miniconda3\Scripts;%UserProfile%\Miniconda3\Library\bin;%PATH%
      conda info -a
    displayName: Install miniconda

  - powershell: |
      Set-PSDebug -Trace 1
      $batchcontent = @"
      ECHO ON
      SET vcpython=C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0
      DIR "%vcpython%"
      CALL "%vcpython%\vcvarsall.bat" %*
      "@
      $batchDir = "C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0\VC"
      $batchPath = "$batchDir" + "\vcvarsall.bat"
      New-Item -Path $batchPath -ItemType "file" -Force
      Set-Content -Value $batchcontent -Path $batchPath
      Get-ChildItem -Path $batchDir
      Get-ChildItem -Path ($batchDir + '\..')
      set LIB
    displayName: Patch vs2008

  - powershell: |
      Write-Host "##vso[task.prependpath]$ENV:UserProfile\Miniconda3;$ENV:UserProfile\Miniconda3\Scripts;$ENV:UserProfile\Miniconda3\Library\bin"
    displayName: Add conda to PATH

  - script: |
      set PATH
      conda --help
      conda --version
      conda install python="%PYTHON_VERSION%" -y
      if "%CONDA_VERSION%" == "canary" (conda update -c conda-canary conda) else (conda update -q conda)
      conda config --set always_yes yes
      conda config --set auto_update_conda no
      conda info
      python -c "import sys; print(sys.version)"
      python -c "import sys; print(sys.executable)"
      python -c "import sys; print(sys.prefix)"
      conda update -q --all
      conda install -q pip python-libarchive-c pytest git pytest-cov jinja2 m2-patch flake8 mock requests contextlib2 chardet glob2 perl pyflakes pycrypto posix m2-git anaconda-client numpy beautifulsoup4 pytest-xdist pytest-mock filelock pkginfo psutil pytz tqdm conda-package-handling
      conda install -c conda-forge pytest-azurepipelines -y
      echo "safety_checks: disabled" >> ~/.condarc
      echo "local_repodata_ttl: 1800" >> ~/.condarc
      if "%PYTHON_VERSION%" == "2.7" conda install -q scandir
      if "%PYTHON_VERSION%" == "3.7" conda install -q py-lief
      python --version
      python -c "import struct; print(struct.calcsize('P') * 8)"
      pip install --no-deps .
      conda build --version
      pushd .. && git clone https://github.com/conda/conda_build_test_recipe  && popd
      mkdir %UserProfile%\cbtmp_serial
      mkdir %UserProfile%\cbtmp
      for /d %%F in (%UserProfile%\cbtmp_serial\*) do rd /s /q "%%F"
      for /d %%F in (%UserProfile%\cbtmp\*) do rd /s /q "%%F"
      conda create -n blarg -yq --download-only python=2.7
      conda create -n blarg -yq --download-only python=3.7
      conda create -n blarg -yq --download-only python cmake
    displayName: 'Configuration'

  - script: |
      set PATH
      conda install -y conda-verify
      set PERL=
      set LUA=
      set R=
      py.test --color=yes -v --cov conda_build --cov-report xml tests --basetemp %UserProfile%\cbtmp_serial -n 0 -m "serial" --test-run-title="Win-SerialTests-%CONDA_VERSION%-Python%PYTHON_VERSION%"
    displayName: 'Serial Tests'

  - script: |
      source activate base
      conda remove -y conda-verify
      set PERL=
      set LUA=
      set R=
      py.test --color=yes -v --cov conda_build --cov-report xml --cov-append tests --basetemp %UserProfile%\cbtmp -n auto -m "not serial" --test-run-title="Win-ParallelTests-%CONDA_VERSION%-Python%PYTHON_VERSION%"
    env:
      VS90COMNTOOLS: "C:\\Program Files (x86)\\Common Files\\Microsoft\\Visual C++ for Python\\9.0\\VC\\bin"
      LIB:
    displayName: 'Parallel Tests'
