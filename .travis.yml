language: python
matrix:
  include:
    - python: '2.7'
      os: linux
    - python: '3.4'
      os: linux
    - python: '3.5'
      os: linux
    # - python: '3.5'
    #   env: CANARY=true
    #   os: linux
    - python: '3.5'
      env: FLAKE8=true
      os: linux

install:
  # TODO: Use a "latest" url
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes
  - conda update -q --all
  - conda install -q --force --no-deps conda requests
  - conda install -q pip pytest requests jinja2 patchelf flake8 mock python=$TRAVIS_PYTHON_VERSION pyflakes=1.1
  - conda install -q anaconda-client pip pytest-cov numpy
  - conda install -c conda-forge -q perl
  - pip install pytest-cov pytest-xdist pytest-catchlog filelock pytest-timeout
  - if [[ "$CANARY" == "true" ]]; then
      conda install -y -q -c conda-canary conda;
    fi
  - conda config --set always_yes yes
  - pip install --no-deps .
  - conda info -a
  # This is an extra repo that we clone for relative path entries
  - pushd ..
  - git clone https://github.com/conda/conda_build_test_recipe
  - popd

script:
  # flake8 and bdist_conda test together
  - if [[ "$FLAKE8" == "true" ]]; then
      flake8 .;
      cp bdist_conda.py $HOME/miniconda/lib/python${TRAVIS_PYTHON_VERSION}/distutils/command;
      pushd tests/bdist-recipe;
      python setup.py bdist_conda;
      popd;
      conda build conda.recipe --no-anaconda-upload -c conda-canary;
    else
      py.test -v -n 2 --cov conda_build --cov-report xml tests;
    fi
  - conda build --help

notifications:
    flowdock: ef3821a08a791106512ccfc04c92eccb

git:
  depth: 10000

sudo: false

after_success:
  - pip install codecov
  - codecov --env TRAVIS_PYTHON_VERSION
