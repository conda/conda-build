name: Run unit and integration tests

on:
  # NOTE: github.event context is push payload:
  # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'

  # NOTE: github.event context is pull_request payload:
  # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request
  pull_request:
    types:
      - opened
      - reopened
      - synchronize


jobs:
  test-conda-build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8']
        conda-version: [release]
        test-type: [serial, parallel]
        include:
          - os: ubuntu-latest
            python-version: '3.9'
            conda-version: canary
            test-type: serial
          - os: ubuntu-latest
            python-version: '3.9'
            conda-version: canary
            test-type: parallel
    env:
      pytest-replay: --replay-record-dir=pytest-replay/ --replay-base-name=Linux-${{ matrix.conda-version }}-Py${{ matrix.python-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          condarc-file:  ci/github/.condarc
          python-version: ${{ matrix.python-version }}

      - name: Install Conda-Canary if canary version
        if: matrix.conda-version == 'canary'
        run: |
          conda install -y -c conda-canary conda

      - name: Install default Conda if release version
        if: matrix.conda-version == 'release'
        run: |
          conda install -y conda

      - name: Source Scripts
        run: |
          source ci/azurepipelines/install_conda_build_test_deps
          pip install -e .
          conda info -a
          mkdir ./pytest-replay

      - name: Run Serial tests
        if: matrix.test-type == 'serial'
        run: |
          pytest \
              --color=yes \
              -vv \
              -n 0 \
              --basetemp /tmp/cb_serial \
              --cov conda_build \
              --cov-report xml \
              -m "serial" tests \
              --test-run-title="${{ matrix.os }}-SerialTests" \
              --test-run-title="${{ matrix.os }}-SerialTests-${{ matrix.conda-version }}-Py${{ matrix.python-version }}" \
              ${{ env.pytest-replay }}

      - name: Run Parallel tests
        if: matrix.test-type == 'parallel'
        run: |
          pytest \
              --color=yes \
              -vv \
              -n auto \
              --basetemp /tmp/cb \
              --cov conda_build \
              --cov-append \
              --cov-report xml \
              -m "not serial" tests \
              --test-run-title="${{ matrix.os }}-ParallelTests" \
              --test-run-title="${{ matrix.os }}-ParallelTests-${{ matrix.conda-version }}-Py${{ matrix.python-version }}" \
              ${{ env.pytest-replay }}

      - name: Upload Pytest Replay
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}_replay-py-${{ matrix.python-version }}_${{ matrix.conda-version }}_${{ matrix.test-type }}
          path: pytest-replay/
