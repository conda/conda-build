name: Run unit and integration tests

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize


jobs:
  test-linux:
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8']
        conda-version: [release]
        test-type: [serial, parallel]
        include:
          - python-version: '3.9'
            conda-version: canary
            test-type: serial
          - python-version: '3.9'
            conda-version: canary
            test-type: parallel

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          condarc-file:  ci/github/.condarc
          python-version: ${{ matrix.python-version }}

      - name: Install Conda-Canary if canary version
        if: matrix.conda-version == 'canary'
        run: |
          conda install -y -c conda-canary conda

      - name: Install default Conda if release version
        if: matrix.conda-version == 'release'
        run: |
          conda install -y conda

      - name: Source Scripts
        run: |
          source ci/azurepipelines/install_conda_build_test_deps
          pip install -e .
          conda info -a
          source ci/github/github_setup_pytest_replay
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          CONDA_VERSION: ${{ matrix.conda-version }}

      - name: Run Serial tests
        if: matrix.test-type == 'serial'
        run: |
          pytest --color=yes -vv -n 0 --basetemp /tmp/cb_serial --cov conda_build --cov-report xml -m "serial" tests --test-run-title="Linux-SerialTests" --test-run-title="Linux-SerialTests-$CONDA_VERSION-Py$PYTHON_VERSION" "${PYTEST_REPLAY_OPTIONS[@]+"${PYTEST_REPLAY_OPTIONS[@]}"}"
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          CONDA_VERSION: ${{ matrix.conda-version }}

      - name: Run Parallel tests
        if: matrix.test-type == 'parallel'
        run: |
          pytest --color=yes -vv -n auto --basetemp /tmp/cb --cov conda_build --cov-append --cov-report xml -m "not serial" tests --test-run-title="Linux-ParallelTests-$CONDA_VERSION-Python$PYTHON_VERSION" "${PYTEST_REPLAY_OPTIONS[@]+"${PYTEST_REPLAY_OPTIONS[@]}"}"
          ls -la
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          CONDA_VERSION: ${{ matrix.conda-version }}

      - name: Upload Pytest Replay
        uses: actions/upload-artifact@v2
        with:
          name: pytest_replay-py-${{ matrix.python-version }}_${{ matrix.conda-version }}_${{ matrix.test-type }}
          path: ./pytest-replay/
