2016-05-13 1.20.3:
------------------
Features:
 * use posix metapackage for cran skeleton packaging (#956)

Bug fixes:
 * fix output of package paths (extra output was breaking tools).  Add tests. (#950)
 * change default of no_download_source in build.py (for compatibility with conda-build-all) (#950)
 * fix regression in [] being confused for selectors (#957)

2016-05-13 1.20.2:
------------------
Features:
 * added --token and --user flags to pass corresponding information to anaconda upload (#921)
 * added conda render command that outputs a fully-rendered meta.yaml to either stdout, or to file (with --file) (#908)
 * support source checkout tools specified in meta.yaml. If source checkout fails at the rendering phase, source checkout and rendering are re-done after the build environment is created. (#843, #946)
 * fn is now optional when a URL specifies a filename. (#942)
 * CRAN skeleton generator now uses MSYS2 for Windows support (#942)
 * conda build & conda render both recursively look for meta.yaml (support conda-forge feedstock submodules) (#908)
 * Whitelist MAKEFLAGS environment variable. Setting this outside conda build should take effect in your build. Parallelize on *nix by adding -j here, instead of -j${CPU_COUNT} in your build.sh. This helps on CI's, where CPU_COUNT is not always well-behaved. (#917)
 * Run python_d executable on windows when debug feature is active (#724)
 * add conda build flag --keep-old-work that temporarily moves your last build, then moves it back after completion. For debugging, when more than one package is involved. (#833)
 * Allow selectors in imported jinja templates (#739)

Bug fixes:
 * fixed several instances wherein --skip-existing did not work (#897, #945)
 * Fully render recipe before outputting build string  * fixes empty spots where GIT_* info should have been (#923)
 * Add MSYS2 path conversion filters to avoid issues with Win 7.1 SDK (#900)
 * Address PyPI's change of URL format (#922,
 * Fix invalid gcc "-m 32" flag (#916)
 * Fix empty section (due to selectors) handling regression (#919)
 * Fix regression in handling of VS2008 Pro (not Express + VC for Python 2.7). It is important to at least try to run vcvarsall.bat. (#913)
 * Fix CPAN skeleton generator (handle missing sections better) (#912)
 * Make test/requires versions match build/requires without additional pinning (#907)
 * Remove hard-coded CYGWIN path from conda-build's custom PATH (#903)
 * Source is downloaded before testing, fixing an issue where if build machine and some other test machine had different source, strange things happened. (#946)
 * Fix regression with Python 3.x fixing shebangs (#892)
 * Fix conda inspect crashes by using conda-meta info rather than filenames or dist names for package info (#947)

Miscellany:
 * restore AppVeyor testing for Windows builds (#864)
 * Build py3.5 on Appveyor (#938)
 * PEP8 cleanup; use flake8 rather than pyflakes (#938)
 * limited scope of project locking to avoid lock conflicts between build and rendering (#923)
 * set up anaconda.org build infrastructure (#924)
 * on Windows, environment variables are written to the temporary bld.bat in the source work folder. (#933)


2016-04-21   1.20.1:
--------------------
  * fix source/path and GIT_* issues, #801
  * fix invalid assertion, #855
  * environ.py refactor/clenup, #856
  * Better messaging for yaml parsing errors, #862
  * fix typo, #863
  * make CONDA_PY and CONDA_NPY available in build.sh, #837
  * execute source fetchers (e.g., git, hg) in the _build environment, #843
  * use memory map rather than read() to reduce memory usage, #866
  * fix svn url on Windows in checkout tool test, #867
  * fix empty files bug, #869
  * improve Visual Studio logic, #861
  * add files in order of increasing size to improve access times to tar, #870
  * VS_YEAR, VS_VERSION, VS_MAJOR and CMAKE_GENERATOR environment variables, #872


2016-03-25   1.20.0:
--------------------
  * support for Lua as a built-in language (Alex Wiltschko), #719
  * allow additional keys in "about" section, #831
  * fix Examples directory in noarch_python, #838
  * revert OS X SIP fix, part of #808, #844
  * fixed race condition between removal and creation of tmp_dir on win, #847


2016-03-10   1.19.2:
--------------------
  * silence some errors when subprocessing git #790
  * fixes conda skeleton cran under python3 #817
  * fixes some bugs introduced with the #808 otools refactor, #821, #825
  * fixes #818 conda-build 1.19.1 breaks C compilation, #825
  * actually fix #807 recurisive builds after conda 4.0 release, #826
  * fixes #820 crash when building from a git repo on Windows, #824


2016-03-09   1.19.1:
--------------------
  * Environment variables defined in the 'script_env' build section of
    the meta.yaml file were previously assigned the value '<UNDEFINED>'
    if not found in the environment. Now they are left unset and a
    warning is raised instead, #763.
  * fix printing of NumPy 1.10 in help message, #776
  * add -m32 to CFLAGS and CXXFLAGS for multilib gcc, #775
  * fixes CYGWIN_PREFIX for drive letters other than C:, #788
  * fixes for noarch package building on Windows, #799
  * work-arounds for System Integrity Protection on OS X El Capitan, #808
  * fix recurisive builds after conda 4.0 release, #813


2016-01-29   1.19.0:
--------------------
  * normalize unicode in conda skeleton cran, #681
  * use /bin/sh on openbsd, #707
  * fail early during patching
  * use symlinks=True in copytree() for SVN sources, #665
  * support entry points with dots (to suppoer classes), #690
  * deprecate conda pipbuild in favor of conda skeleton. #710
  * fix Win references to PipBuild scripts, #723
  * allow git shallow clones, #604
  * remove broken license file detection code, about/license_file
    expects filename now
  * allow pinning dependencies when building a package, #741
  * fix to restore building for multiple python versions on Windows, #744
  * fix building (git unrelated things) when git is not installed, #745
  * enable tab completion for the packages argument of the conda inspect
    commands, #748


2015-11-19   1.18.2:
--------------------
  * move path prepending to function for uniformity, #601
  * improve yaml loading, #603
  * allow jinja2 templates to be located in current conda environment, #578
  * fix NPY_VER for versions >= 1.10 (Should be '1.10', not '1.1.0'), #660
  * create jinja2 environment with 'strict' mode for undefined values, #661
  * add a method to shell out and execute a command through subprocess, #621


2015-10-16   1.18.1:
--------------------
  * allow config system to handle versions with have more than a single digit
    in the minor version, #626
  * fix None encoding bug, #614
  * add missing Python version when adding Python to test specs
  * add features to build string
  * improve yaml loading (you don't have to quote version numbers anymore, eg.
    if the version is 3.1), #603


2015-10-01   1.18.0:
--------------------
  * develop options --build_ext, --clean_build_ext, #512
  * fix directory not existing when using --no-include-recipe option
  * add support for multiple rpaths on OS X to conda inspect
  * don't add 'np' to build string when package depends on numpy, but not
    a specific version
  * be more explicit when numpy version is included in dependency specs, #573
  * correctly remove egg directories on Windows, #536
  * add new option msvc_compiler to build section for forcing MSVC compiler
    version
  * add new command conda inspect channels --test-installable
  * fix a Unicode issue with conda skeleton cpan
  * when auto-adding python spec to execute run_test.py, don't require a
    specific version
  * add uninstall option to conda develop
  * give a better error message in skeleton pypi for packages with invalid
    urls
  * don't try to test skipped recipes
  * don't exit on a skipped recipe
  * recursively build packages from unsatisfiable install hints
  * make recursive building work better with --skip-existing
  * update CONDA_R to 3.2.2
  * fix encoding issues with git_info on Windows
  * test Python 3.5 in Travis CI
  * add support for absolute rpaths on Linux


2015-08-24   1.17.0:
--------------------
  * quote set calls in bld.bat
  * use the trash on Windows when deleting environments, see #521
  * improve documentation in noarch_python source
  * rename 'binstar' -> 'anaconda', see #519
  * allow blank sections in meta.yaml, see #533
  * add --no-include-recipe option to conda-build, see #535
  * add ability to add license file in info/license.txt, see #545
  * don't recursively build recipes more than once, #538
  * .git can be a file, #537


2015-07-30   1.16.0:
--------------------
  * handle trailing slashes in package names in conda skeleton cran
  * Cygwin git now works correctly.
  * the prefix itself is now included in the PATH in the test script on
    Windows (previously it was just the Scripts directory)
  * by default, recipes that runtime depend on numpy will no longer depend on
    an explicit version of numpy. The old behavior is still available by
    setting the CONDA_NPY environment variable or using conda build --numpy
  * add py35 variable to selector namespace
  * improve conda-meta untracked files error message
  * fix conda build --help in Python 2
  * add conda_build.sub_commands object which is a list of conda sub-commands


2015-07-22   1.15.0:
--------------------
  * fix conda skeleton cran --update-outdated --output-dir .
  * add argcomplete completers for recipes, --python, --numpy, --R, CRAN
    packages (with conda skeleton cran), and PyPI packages (with conda
    skeleton pypi)
  * conda develop now relinks object files on OS X (#490)
  * allow a glob for always-include-files
  * allow an extra section in meta.yaml, with free-form content (#483)
  * don't echo environment variables when building on Windows (#274)
  * add conda build --skip-existing
  * show default in help for conda skeleton --output-dir
  * add --update-outdated option to conda skeleton cran
  * skeleton: fix noarch_python option when build_comment is "#"
  * don't allow to build a package with the conda-meta directory
  * automatically remove a package of the recipe itself if it is installed as
    a build dependency
  * allow 'extra' key in meta.yaml, see #483
  * move echo command in Windows build, see #274
  * add regex to always included files, see #484
  * add strings in conda.config.non_x86_linux_machines, e.g. "ppc64le",
    as selector variables (renames armv6 to armv6l)


2015-06-29   1.14.1:
--------------------
  * add --size option to change RSA modulus length when generating RSA key
    pairs (defaults to 2048 bit)
  * make use of Crypto.Signature.PKCS1_PSS module, see #469
  * update default for CONDA_R to 3.2.0
  * manually install dependencies of recommended R packages in the
    build.sh, #457
  * fix issues when git commits have non-ASCII characters, #458
  * catch tarfile.ReadError in conda index, #460


2015-06-16   1.14.0:
--------------------
  * add support for signing packages, and indexing them, #430
  * removing LIBRARY_PATH and INCLUDE_PATH build environment variables on
    Unix, they where originally added in #228, but are causing problem for
    some people and are not really necessary
  * don't rename meta.yaml to meta.yaml.orig in the recipe that is copied into
    built packages
  * handle links to libraries that exist in multiple places better on OS X
  * add --no-remove option to conda index
  * various fixes for --python, --numpy, --perl, and --R
  * various cleanups for the command documentation
  * fix conda skeleton pypi --pypi-url
  * don't add the module name to the import tests in conda skeleton pypi
  * add --groupby option to conda inspect linkages
  * fix some incorrect "not found" instances from conda inspect linkages on OS
    X
  * don't include versions with restrictions in the build string
  * don't fail if conda-build cannot be found for the version check
  * remove special logic if the username on Windows is "builder"
  * conda skeleton pypi: add --noarch-python
  * fix issue with filenames with spaces in conda convert
  * place noarch packages in the noarch directory
  * handle tests_require in conda skeleton pypi
  * pipbuild: don't check if package already exists
  * skeleton pypi: remove --no-download option
  * add noarch option to pipbuild
  * add ability to sign packages


2015-05-19   1.13.0:
--------------------
  * skeleton pypi: fail better for packages with bad urls
  * fix summary in bdist_conda
  * fix compiling pyc files in Python 3
  * convert: correctly set the subdir key in the metadata
  * add --git-tag to skeleton cran
  * include LANG in the build environment
  * export proxy environment variables
  * fix conda skeleton cran --cran-url
  * set CONDA_DEFAULT_ENV in the build environment
  * fix conda index -c
  * correctly extract .tar.Z files
  * avoid infinite loops in conda skeleton pypi --recursive
  * add --all to conda inspect linkages and conda inspect objects
  * add --manual-url to skeleton pypi
  * fix issue where 'conda index' with old packages would create bad metadata
  * resolve circular dependencies in conda-skeleton (#409)
  * use versioneer 0.14 (#385)
  * always_include_files errors out (exits) on files that aren't there (#387)
  * automatically lowercase the package name in bdist_conda (see
    aplpy/aplpy#259)


2015-04-28   1.12.1:
--------------------
  * fix regression in always_include_files that causes build failure (#386)


2015-04-10   1.12.0:
--------------------
  * correctly fix egg directories that are part of the package
  * use the --force-rpath flag to patchelf
  * update MACOSX_DEPLOYMENT_TARGET to 10.6
  * fix running tests for Python packages whose version differs from the
    version in conda
  * fix some Python 3 issues with pipbuild
  * don't allow packages to depend on themselves
  * allow to use the r- prefix in conda skeleton cran
  * make recommended r packages depend on r-base in skeleton cran
  * new post-build logic on OS X. All libraries on OS X now include LC_RPATH,
    which points to the environment lib directory, and use and install name
    using @rpath
  * don't set DYLD_FALLBACK_LIBRARY_PATH in cran recipes (the new LC_RPATH
    logic on OS X makes this unnecessary)
  * fix conda build --build-only when the long build prefix is used
  * make conda inspect linkages work on OS X
  * don't hide the traceback for maximum recursion depth exceeded errors
  * add conda inspect objects, for inspecting object files in packages
    (OS X only)
  * add --untracked flag to conda inspect linkages
  * build R packages against a specific version of R
  * decompress .tar.z files
  * add support for GitHub urls in conda skeleton cran


2015-03-05   1.11.0:
--------------------
  * add 'script_env' key in build section of meta.yaml file, which is a list
    of environment variable names which are made available in the build
    script.  If a variable is listed here, but is not in the environment,
    the value '<UNDEFINED>' is assigned.
  * Handle OSError in conda index
  * Fix how the PATH environment variable is set on Windows
  * Remove the work directory earlier in the build
  * Give a helpful error message for dependencies like "python >= 2.7"
  * Add CYGWIN_PREFIX environment variable on Windows
  * Handle list requires in skeleton pypi
  * Correctly fail if the Windows bld.bat exits 1
  * Give a better error message if no urls can be found for a package
  * Add __main__ to allow python -m conda_build
  * %R% is now set to R.exe instead of R.bat on Windows
  * Write the build script to the source directory for build/script instead of
    the recipe directory.
  * Handle non-directories in copy_into (avoids an OSError, #332)
  * Halt the build on YAML error without jinja2
  * Clone git sources with the --recursive option
  * Add --channel and --override-channels to conda build. -c is changed to
    mean --channel instead of --check.
  * Add --check-md5 flag to conda index
  * Look for vcvarsall.bat from the Microsoft Visual C++ Compiler for Python 2.7
  * Use PyPi XMLRCP client search in order to ignore case for PyPi package
    names in pipbuild


2015-02-10   1.10.2:
--------------------
  * don't set the GIT_* environment variables when the source is not a git repo
  * skeleton cran: add extra metadata from CRAN to the recipe
  * skeleton pypi: fix there not being a fragment in a url
  * don't match comment only lines as selectors


2015-02-06   1.10.1:
--------------------
  * greatly improved ability to create noarch_python packages, #317
  * added 'subdir' key to info/index.json
  * allow url to be a list or urls, which are tried until one works
  * use quotes instead of !!str for versions from the conda skeleton commands
  * add conda skeleton cran to generate recipes for packages from CRAN
  * add support for adding a readme to a recipe
  * add a --quiet option to conda convert


2015-01-15   1.10.0:
--------------------
  * automatically convert absolute symlinks to paths in the build prefix to
    relative ones.
  * error if there are symlinks to the source directory.
  * use the placeholder prefix in text files rather than the build prefix
  * allow non-Python packages to be converted to other platforms with conda
    convert
  * new command conda inspect for inspecting packages. The only subcommand so
    far is conda inspect linkages, which shows the dynamic linkages of the
    shared object files on Linux.
  * correctly handle Unix style has_prefixes on Windows
  * run the tests in Binstar build
  * only modify egg directories that are part of the package being built
  * don't exclude .dylib files from prefix replacement
  * ability to build noarch packages
  * allow specifying files to always include
  * fix for building dependencies in some cases
  * print the correct thing for binary files detected with a prefix


2014-11-18   1.9.1:
-------------------
  * set PYTHONNOUSERSITE=1 while running build scripts
  * conda index: add error if they try to mix their packages into Anaconda
    channel
  * fix building recipes with local git urls in Windows
  * warn if conda-build is out of date


2014-10-22   1.9.0:
-------------------
  * adapt tests for Windows
  * don't use the long build prefix if the short build prefix is already long
  * support rewriting library load path for libraries that are in
    subdirectories of lib/ on OS X
  * allow 'git_rev' as a valid key in 'source', which is identical in behavior
    to git_branch and git_tag (all checkout the given revision)
  * also grab the full HEAD sha1 and shove it into the environmental
    variable GIT_FULL_HASH
  * automatically detect text prefix files
  * add detect_binary_files_with_prefix flag to meta.yaml to automatically
    detect binary files with the prefix and add them to
    binary_has_prefix_files
  * fix git_info when the author or commit message contains Unicode characters
  * allow to pass a url to skeleton pypi
  * add NPY_VER environment variable
  * fix conda convert --show-imports
  * give better error message when encountering a corrupt tarfile in conda
    index
  * print{ some more helpful information about what is going on at the
    beginning of a build
  * allow source/path in the meta.yaml to specify a path to the source (which
    can be relative to the recipe directory)
  * support xz files in Python 3 without requiring unxz
  * put spaces after skeleton pypi comments
  * correctly detect when to preserve the egg directory and depend on
    setuptools in skeleton pypi
  * set LIBRARY_PATH and INCLUDE_PATH when building on Unix
  * allow selectors to have text after them if they are in a comment
  * add CPU_COUNT environment variable to the build


2014-09-19   1.8.2:
-------------------
  * add substantially more tests
  * add ability to set additional rpath directories using build/rpaths
  * patch command on windows no-longer takes the --binary option
  * fix post processing so that name-space packages can be 'flattened' into
    a single directory
  * don't remove the .svn directory when doing a svn checkout


2014-09-03   1.8.1:
-------------------
  * has_prefix paths must always use /, even on Windows
  * fix bug in Windows Python 2
  * add .travis.yml
  * allow recipes to use requirements.txt
  * fix building a package that has Mach-O stub files
  * fix recursive package building
  * handle empty data size in pypi
  * allow an explicitly set empty version string


2014-08-22   1.8.0:
-------------------
  * add ability to convert Golke's Windows packages into conda
    packages, use "conda convert <Gohlke>.exe".  See also:
    http://www.lfd.uci.edu/~gohlke/pythonlibs/
  * handle spaces on Windows better
  * add croot to the module level of conda_build.config for backwards
    compatibility
  * changed extra long prefix for building to _placehold...


2014-08-20   1.7.1:
-------------------
  * add --all-extras flag to skeleton pypi
  * automatically use the long or short build prefix as needed
  * fix to allow specification of full major.micro.minor for numpy, python,
    and perl (only add the build string if it is an exact major.minor or
    major.minor.patch version. If it is an inequality, it is not added)


2014-08-05   1.7.0:
-------------------
  * better install_requires parsing for skeleton pypi
  * the build environment from conda-build is now called _build___...
    This is so that recipes with binary_has_prefix_files build against a
    sufficiently long prefix.
  * don't overwrite the input file in convert
  * fix a bug related to the prefix_files.txt file
  * show the download bytes in human form in skeleton pypi
  * make patchelf error message clearer
  * fix some issues with the git describe environment variables
  * improve shebang line modifications with python.app
  * show the download bytes in human form in skeleton pypi

2014-07-29   1.6.1:
-------------------
  * fix an issue building with a git repository in Python 3

2014-07-29   1.6.0:
-------------------
  * don't fail on MachO stub files on OS X
  * add some git describe related environment variables when the source is a
    git repository
  * add --python and --numpy flags to conda build, which do the same thing as
    setting CONDA_PY and CONDA_NPY
  * allow a . in CONDA_PY and CONDA_NPY
  * correctly catch RuntimeError
  * fix an issue building some packages on Windows
  * make skeleton pypi --recursive work with versioned dependencies
  * some additional type checking for meta.yaml
  * always include numpy in skeleton pypi

2014-07-03   1.5.0:
-------------------
  * add bdist_conda
  * fix features and track_features
  * detect files with the build prefix automatically on Windows

2014-07-01   1.4.0:
-------------------
  * fix skeleton pypi behind a proxy
  * add binary_has_prefix_files, which does a binary prefix replacement
  * fix skeleton pypi on Windows
  * allow the git_url to be a relative path to the recipe directory


2014-06-04   1.3.5:
-------------------
  * the yaml script tag was only written if build.sh already existed,
    see issue #105
  * use tests_require to fill in test requirements in the setuptools
    template, see issue #107


2014-06-02   1.3.4:
-------------------
  * add --build-only and --post flags to conda-build
  * add conda convert -p all
  * allow to set __conda_buildnum__.txt and __conda_buildstr__.txt, analogous
    to __conda_version__.txt


2014-04-28   1.3.3:
-------------------
  * add SHA256 support for downloaded source
  * conda convert now creates platform directories, like
    win-32/converted_package.tar.bz2
  * allow to specify the version of python, numpy, or perl in the meta.yaml
    (it will ignore the CONDA_PY, CONDA_NPY, or CONDA_PERL, respectively, in
    this case)


2014-04-15   1.3.2:
-------------------
  * allow changing conda-bld directory (which is by default <root>/conda-bld
    when the conda root is not writable, and ~/conda-bld otherwise), to be
    changed by CONDA_BLD_PATH environment variable or conda-build: root-dir:
    in condarc file
  * add build/has_prefix_files
  * remove broken conda-build/build_dest
  * fix build in Windows Python 2
  * add --quiet option to conda-build
  * add check for characters in package name dependencies
  * add .class to the object file extension blacklist
  * removed build/no_softlink in favor of build/no_link with list of glob
    syntax


2014-03-25   1.3.1:
-------------------
  * add conda metapackage command
  * fix recursive conda building when dependencies are nested more than one
    level deep.
  * fix build in Windows Python 2
  * fix skeleton pypi for packages whose setup.py has __future__ imports
  * add conda pipbuild command which uses a simple recipe based on pip
    install to build a conda package
  * fix skeleton pypi and pipbuild when package data does not have classifiers
  * add a basic conda develop command
  * add the --recursive option to conda skeleton pypi
  * conda skeleton pypi no longer asks about single line licenses
  * conda skeleton pypi now queries pypi case insensitively
  * conda skeleton pypi now works in a different conda environment. This
    avoids anything bad that might happen when trying to get the metadata from
    the package from messing up the root environment.
  * conda skeleton pypi now patches distribute directly. This is more robust
    than trying to insert a patch into setup.py, as was done previously.
  * allow to set the version post-build by writing a __conda_version__.txt
    file to the source directory.
  * add ability to skip binary relocation step by
    setting "build/binary_relocation: False" in meta.yaml


2014-03-14   1.3.0:
-------------------
  * add skeleton for CPAN Perl packages, issue #53. Unlike
    the PyPI skeleton, it supports a --recursive option to
    also generate the recipes for all of the dependencies of
    a given module/distribution
  * add support for run_test.pl and Perl import tests when
    building Perl packages
  * add CONDA_PERL environment variable support for
    determining which version of Perl to build packages for.
    Unlike CONDA_PY, this must include the full version with
    periods (e.g., 5.18.2)
  * automatically build packages for dependencies if the recipe is
    present in the current working directory
  * fix a number of Python 3 compatibility issues, issue #59
  * work with source files with uppercase suffixes
  * switch from chrpath to patchelf on Linux, issue #57
  * don't use hard-coded msvc path
  * sort import tests from skeleton pypi


2014-02-25   1.2.1:
-------------------
  * added conda-build/build_dest option to condarc


2014-02-13   1.2.0:
-------------------
  * make sure WORK_DIR exists
  * use MSVC 2010 for Python 3
  * include the summary with conda skeleton pypi
  * fix object detection on Python 3
  * update default CONDA_NPY to 18


2014-02-06   1.1.0:
-------------------
  * add ability to use templates in conda recipes
  * remove fallback to <root>/conda-recipes, i.e. conda-build always
    expects the full path to the recipe
  * export PKG Build Number
  * add pre-link to package, when it is found in recipe
  * allow to add run_test.sh or run_test.bat, which will be run automatically
    during the test phase.
  * Test commands from the test/commands section of meta.yaml are run from
    bash on Linux and OS X and batch on Windows (previously they were run
    using Python's subprocess).
  * all environment variables from the build process are available during the
    tests, except with the build prefix replaced with the test prefix.


2014-01-24   1.0.0:
-------------------
  * initial release
  * includes conda-build, conda-convert, conda-index, conda-skeleton
  * depends on new conda version 3
  * add license to info/index.json object
