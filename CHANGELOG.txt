2017-03-23 3.0.0alpha1:

Bug fixes:
----------

* remove build and test envs after each packaging step, to avoid unsatisfiable errors  #1866
* remove version pins from requirements added by run_test files (again avoid unsatisfiable errors)  #1866
* fix prefix file detection picking up too many files due to env recreation  #1866
* fix missing r_bin, make run_test.r scripts work  #1869

Contributors:
-------------

* @msarahan

2017-03-22 3.0.0alpha0:

This is a complete revolution in the dynamic rendering capabilities of conda-build.  More information is in the docs PR at https://github.com/conda/conda-docs/pull/414.  There will be a blog post soon, perhaps coupled with a screencast.

Enhancements:
-------------

* greatly extended Jinja2 templating capabilities  #1585
* record environment variables at top of build.sh, similar to what is done with bld.bat in win.  #1765

Bug fixes:
----------

* fix symlinks to folders in packaging  #1775
* fix detection of patch level when maxlevel=0  #1796
* properly copy permissions when extracting zip files  #1855
* Add more important Windows environment variables to the test environment  #1859, #1863


Contributors:
-------------

* @jjhelmus
* @kalefranz
* @mingwandroid
* @msarahan
* @pkgw
* @stuarteberg
* @ukoethe
* @wulmer


2017-03-14 2.1.7:

Enhancements:
-------------

* pass WINDIR env var through on Windows  #1837
* make long test prefix an option (default disabled)  #1838


Bug fixes:
----------

* monkeypatch ensure_use_local to avoid conda-build import clobbering conda CLI arguments  #1834
* Fix context conda_build attr error with older conda  #1813
* Fix legacy noarch shebang replacement code to account for long prefix paths #1813
* properly initialize 'system' key in linkage inspecting #1839
* backport try mmap from master #1764
* fix wheel output not respecting --output-folder CLI argument #1838
* catch csv dialect sniffing error, try to fallback to to excel_tab.  Might work? #1840


Contributors:
-------------

* @kalefranz
* @mcs07
* @msarahan


2017-03-08 2.1.6:

Enhancements:
-------------

* tests on linux/mac now use 255-character prefix when creating test environment  #1799
* allow test/imports for R and lua packages #1806

Bug fixes:
----------

* Fix case comparison in license_family.py  #1761
* Fix symlinked folders not being included in packages  #1770
* Fix extraction of tarballs containing unicode filenames  #1779, #1804
* fix unicode in delimiter for noarch py_file_map  #1789
* Clean up conda interface #1791
* Confine conda-build 2.1.x to conda >4.1,<=4.3  #1792
* fix detection of patch strip level when maxlevel = 0  #1796
* fix attribute error in exception handling for missing dependencies  #1800
* fix osx python_app test for python 3.6  #1801
* don't die when unicode found in patch files  #1802
* clarify error messaging when git is not found  #1803
* fix shebangs in entry point scripts using legacy noarch_python #1806
* fix test environment variables being set to build prefix values #1806
* fix inspect linkages breaking due to conda index keys changing to different objects in conda 4.3  #1810


Contributors:
-------------

* @gbrener
* @kalefranz
* @msarahan
* @pkgw
* @stuertz


2017-02-20 2.1.5:

Enhancements:
-------------

* don't crash on unknown selector.  Warn, but evaluate as False.  #1753
* allow default conda packaging behavior for split package whose name matches top-level name, but lacks both ``files`` and ``script`` entry.  #1758


Bug fixes:
----------

* unify license family text with Anaconda-Verify  #1744
* apply post-processing to each split package, not just to post-build prefix files.  #1747
* provide fallback lock directory in user's home folder.  Allows central installs.  #1749
* fix quoting for test paths.  Allows croot with spaces.  #1750
* fix pypi skeleton recursion #1754
* fix assertion error about leading period when Jinja2 variables have default values  #1757
* set default twine target to pypitest to avoid accidental uploads  #1758


Contributors:
-------------

* @gabm
* @msarahan


2017-02-07 2.1.4:

Enhancements:
-------------

* Allow relative paths for --croot option #1736

Bug fixes:
----------

* Rename package_metadata.json file to link.json to more accurately reflect contents #1720
* Fix converted packages from unix to Windows having broken entry points #1721
* Fix an infinite loop when creating the test environment failed #1739
* Fix conda 4.3 incompatibility with --pin-depends option #1740

Contributors:

* @gabm
* @kalefranze
* @msarahan


2017-01-31 2.1.3:

Enhancements:
-------------

* Add --extra-specs to conda skeleton.  Use when a package needs to be available in the temporary env that parses setup.py to make the skeleton.  #1697
* Allow wheels as a source format  #1700
* Allow github urls as CRAN skeleton sources  #1710

Bug fixes:
----------

* exclude package/name field from uses_vcs_in_{meta,build} checks #1696
* Fix conda convert wrt info/paths.json (for conda 4.3 compatibility)  #1701
* update cpan skeleton to use newer API url, fix conda exception handling #1704
* update R default version to 3.3.2  #1707
* fix attribute error on exception handling (better fix on the way)  #1709
* fix bundle_conda removing project files when conda recipe was in the source tree, and utilized relative paths  #1715
* fix glob trying to interpret filenames that look like glob patterns  #1717


Contributors:
-------------

* @ElliotJH
* @jerowe
* @kalefranz
* @mingwandroid
* @minrk
* @msarahan
* @rainwoodman


2017-01-20 2.1.2:

Enhancements:
-------------

* iron out compatibility with conda 4.3 #1667
* pytest improvements for a cleaner CI experience #1686 #1687

Bug fixes:
----------

* Avoid trailing semicolon in MSYS2_ARG_CONV_EXCL variable setting #1651
* filter .git directories more strictly (keep x.git folders, not .git) #1657
* fix 404's killing CPAN skeleton with newer conda versions #1667
* use pythonw to run tests on OSX when osx_is_app is defined in meta.yaml #1669
* ignore obnoxious .DS_Store files when packaging  #1670
* fix --source argument to download source specified in meta.yaml #1671
* fix slashes in file prefix replacement on Windows #1680
* fix multiple source url fallbacks (handle CondaHTTPErrors) #1683
* fix bizarre encoding errors on Windows with projects that embed binary in setup files #1685
* fix CPAN JSON file encoding issue on windows #1688
* revise retry when conda is missing files from a package #1690

Contributors:
-------------

* @dfroger
* @kalefranz
* @mingwandroid
* @msarahan
* @nicoddemus
* @pkgw


2017-01-12 2.1.1:

Bug fixes:
----------

* Fix package conversion consistency, wrt entry points #1609
* Fix about.json contents regarding development versions of conda/conda-build #1625
* Fix Appveyor for testing against source branches of conda #1628
* Raise exception when SRC_DIR is used in tests, but meta.yaml has no test/source_files entry.  SRC_DIR points at test work folder at test time, for minimal needed changes to recipes - just add test/source_files entry with desired files.  #1630
* Fix features list not allowed to be None in bdist_conda #1636
* Fix undefined reference to locks in copy_into #1637
* Fix version comparison in cpan skeleton #1638
* Add dependency on beautifulsoup4 and chardet to better support strangely encoded text files.  #1641
* Fix not-yet-fully-rendered versions starting with . from raising exception #1644
* Consolidate _check_call and check_call_env in utils.  Fix coercion to string that was missing in latter.  #1645

Contributors:
-------------

* @gomyhr
* @jakirkham
* @kalefranz
* @msarahan

2017-01-02 2.1.0:

(includes changes since 2.0.12, including those already listed under 2.1.0beta1)

Enhancements:
-------------

* Consolidate package metadata from extra.json and noarch.json into package_metadata.json #1535 #1539
* finalize paths.json, (formerly files.json), which supersedes the older separate files for tracking file data #1535
* Support output of multiple packages from one recipe #1576
* Support output of wheels #1576
* Add ``--prefix-length`` to conda-build.  This allows one to set the prefix length manually.  It should be used sparingly, preferring creation of a temporary folder on non-encrypted locations, and setting ``--croot`` to that temporary folder.  #1579
* Add ``--no-prefix-length-fallback`` option to conda-build, to fail builds that encounter short prefixes, rather than falling back to the short prefix #1579
* Change CRAN-skeleton to follow conda-forge style #1596
* Allow relative paths to files in source/url field #1614

Bug fixes:
----------

* Rework locks to be more robust #1540
* Call make_hardlink_copy on Windows to prevent conda failures #1575
* Delete the work folder before running the test suite.  Exposes faulty links to source files more easily.  #1581
* Add support for Python 3.6 in selector expressions #1592
* Don't try to compile pyc files when python is not installed in the build env #1593
* Fix a function call leading to corrupted meta.yaml output #1589
* Fix logger to be package-local.  Fixes logger output not showing up.  #1583
* Disallow leading periods in package version  #1594
* Fix reference to undefined need_source_download #1595
* Disallow - in feature names, to avoid conflicts with conda's handling of package names #1600
* Remove help text about passing multiple --python options or "all" - this has been broken for some time.  Replacement coming in 3.0.0.  #1610
* Fix clobbering of no_link variable.  #1611
* Fix index when --output-folder is specified #1613
* Fix python_d.exe incompatibility with conda 4.3 #1615

Contributors:
-------------

* @asmeurer
* @hajs
* @johanneskoester
* @kalefranz
* @mingwandroid
* @msarahan
* @mwiebe
* @soapy1



2016-12-20 2.1.0beta1:

Enhancements:
-------------

* Consolidate package metadata from extra.json and noarch.json into package_metadata.json #1535 #1539
* finalize paths.json, (formerly files.json), which supersedes the older separate files for tracking file data #1535
* Support output of multiple packages from one recipe #1576
* Support output of wheels #1576
* Add ``--prefix-length`` to conda-build.  This allows one to set the prefix length manually.  It should be used sparingly, preferring creation of a temporary folder on non-encrypted locations, and setting ``--croot`` to that temporary folder.  #1579
* Add ``--no-prefix-length-fallback`` option to conda-build, to fail builds that encounter short prefixes, rather than falling back to the short prefix #1579
* Change CRAN-skeleton to follow conda-forge style #1596

Bug fixes:
----------

* Rework locks to be more robust #1540
* Call make_hardlink_copy on Windows to prevent conda failures #1575
* Delete the work folder before running the test suite.  Exposes faulty links to source files more easily.  #1581
* Add support for Python 3.6 in selector expressions #1592
* Don't try to compile pyc files when python is not installed in the build env #1593
* Fix a function call leading to corrupted meta.yaml output #1589
* Fix logger to be package-local.  Fixes logger output not showing up.  #1583
* Disallow leading periods in package version  #1594
* Fix reference to undefined need_source_download #1595
* Disallow - in feature names, to avoid conflicts with conda's handling of package names #1600

Contributors:
-------------

* @asmeurer
* @hajs
* @johanneskoester
* @kalefranz
* @mingwandroid
* @msarahan
* @mwiebe
* @soapy1

2016-12-12 2.0.12:

Enhancements:
-------------

* Whitelist, rather than hardcode, MACOSX_DEPLOYMENT_TARGET.  Default to 10.7  #1561
* Allow local relative paths to be passed as channel arguments #1565

Bug fixes:
----------

* Keep CONDA_PATH_BACKUP as allowed variable in build/test env activation.  Necessary to make deactivation work correctly.  #1560
* Define nomkl selector when FEATURE_NOMKL environment variable is not set #1562
* Move test removal of packaged recipe until after test completes #1563
* Allow source_files in recognized meta.yaml fields #1572

Contributors:
-------------

* @jakirkham
* @mingwandroid
* @msarahan


2016-11-28 2.0.11:
------------------

Enhancements:
-------------

* Further develop and update files.json #1501
* New command line option: ``--output-folder`` allows moving artifact after build (to facilitate CI) #1538
* support globs in `ignore_prefix_files`, `has_prefix_files`, `always_include_files`, `binary_has_prefix_files` #1554
* decouple `ignore_prefix_files` from `binary_relocation`; make `binary_relocation` also accept a list of files or globs #1555

Bug fixes:
----------

* rename `short_path` key in files.json to `path` #1501
* allow `!` in package version (used in epoch) #1542
* don't compute SHA256 for folders #1544
* fix merge check for dst starting with src #1546
* use normpath when comparing utils.relative (fixes git clone issue) #1547
* disallow softlinks for conda (>=v.4.2) in conda-build created environments #1548

Contributors:
-------------

* @mingwandroid
* @msarahan
* @soapy1

2016-11-14 2.0.10:
------------------

Bug fixes:
----------

* Fix backwards incompatibility with conda 4.1 #1528

Contributors:
-------------

* @msarahan


2016-11-11 2.0.9:
-----------------

Enhancements:
-------------

* break build string construction out into standalone function for external usage (Concourse CI project) #1513
* add conda-verify support.  Defaults to enabled.  Adds conda-verify as runtime requirement.
*

Bug fixes:
----------

* handle creation of intermediate folders when filenames provided as build/source_files arguments #1511
* Fix passing of version argument to pypi skeleton arguments #1516
* break symlinks and copy files if symlinks point to executable outside of same path (fix RPATH misbehavior on linux/mac, because ld.so follows symlinks) #1521
* specify conda executable name more specifically when getting about.json info.  It was not being found in some cases without the file extension.  #1525

Contributors:
-------------

* @jhprinz
* @msarahan
* @soapy1


2016-11-03 2.0.8:
-----------------

Enhancements:
-------------

* Support otool -h changes in MacOS 10.12 #1479
* Fix lists of empty strings created by ensure_list (patches failing due to empty patch list) #1493
* Improved logic to guess the appropriate license_family to add to package's index. This improves filtering. #1495 #1503
* Logic for the license_family is now shared between open-source conda-build, and proprietary cas-mirror packages. #1495 #1503

Bug fixes:
----------

* Centralize locks in memory to avoid lock timeouts within a single process #1496
* fix overly broad regex in detecting whether a recipe uses version control systems #1498
* clarify error message when extracting egg fails due to overlapping file names #1500
* fix regression where subdir was not respecting non-x86 arch (values other than 32 or 64) #1506

Contributors:
-------------

* @caseyclements
* @minrk
* @msarahan


2016-10-24 2.0.7:
-----------------

Enhancements:
-------------

* populate SHLIB_EXT environment variable.  For example, .so, .dll, .dylib file extensions use this for their native ending.  #1478

Bug fixes:
----------

* fix metapackage not going through api, thus not showing output file path.  #1470
* restore script exe creation on Windows.  These are for standalone scripts installed by distutils or setuptools in setup.py.  #1471
* fix noarch value propagation from meta.yaml to config.  Was causing noarch to not be respected in some cases.  #1472
* fix calls to subprocess not converting unicode to str  #1473
* restore detect_binary_files_with_prefix behavior - in particular, respect it when false.  # 1477

Contributors:
-------------

* @jschueller
* @mingwandroid
* @msarahan


2016-10-13 2.0.6:
-----------------

Bug fixes:
----------

* fix erroneous import that was only compatible with conda 4.2.x #1460

Contributors:
-------------

* @msarahan


2016-10-13 2.0.5:
-----------------

Enhancements:
-------------

* Add new jinja function for extracting information from files with regular expressions #1443

Bug fixes:
----------

* Quote paths in activation of build and test envs #1448
* Fix source re-copy (leading to IOError) with test as a separate step #1452
* Call conda with an absolute path when gathering metadata for package about.json #1455
* Don't strictly require conda-env to be present for about.json data #1455
* Fix version argument to skeletons not being respected #1456
* Fix infinite recursion when missing dependency is either r or python #1458

Contributors:
-------------

* @bryanwweber
* @msarahan


2016-10-07 2.0.4:
-----------------

Enhancements:
-------------

* Add build/skip_compile_pyc meta.yaml option.  Use to skip compilation on pyc files listed therein.  #1169
* Add build environment metadata to about.json (conda, conda-build versions, channels, root pkgs) #1407
* Make subdir member of config a derived property, so that setting platform or bits is more direct #1427
* Use subprocess call to windows del function to clear .trash folder, rather than conda.  Big speedup. #1438

Bug fixes:
----------

* fix regression regarding 'config' in pypi skeleton for recipes with entry points #1430
* don't load setup.py data when considering entry points (use only info from meta.yaml) #1431
* fall back to trying to copy files without attributes or metadata if those fail #1436
* Fix permissions on packaged files to be user and group writable, and other readable. #1437
* fix conda develop not respecting python version of target environment #1440

Contributors:
-------------

* @mingwandroid
* @msarahan


2016-09-27 2.0.3:
-----------------

Enhancements:
-------------

* add support for noarch: python #1366

Bug fixes:
----------

* convert popen args to bytestrings if unicode #1413
* Fix perl file access error on win skeleton cpan #1414
* Catch patchelf failures in post #1418
* fix path walking in get_ext_files #1422

Contributors:
-------------

* @mingwandroid
* @msarahan
* @soapy1

2016-09-27 2.0.2:
-----------------

Enhancements:
-------------

* Consider all recipes when printing output paths with --output #1332
* Lay groundwork for noarch packages with different types allowed (not just noarch_python) #1334
* Improve setting RPATH on Linux - handle relative paths better #1336
* Add GPL as a license family #1340
* Skip fixing rpath for files listed in ignore_prefix_files #1345
* Uniformly use conda's rm_rf function, not move_to_trash #1355
* Add support for alternate PKGINFO files.  Adds pkginfo dependency.  #1353
* Add --croot argument to conda build CLI, to specify build root folder #1358
* Do not index pkgs folder #1381 #1388
* Assert that merge destination is not a subdir of source, to avoid recursion problems #1396
* add UUID to token upload test to avoid race condition that caused intermittent CI failure #1392
* Roll source.get_dir into config.work_dir, to avoid confusion.  #1400
* Improve locking in several places #1405 #1408

Bug fixes:
----------

* Fix guess_license_family to have LGPL -> LGPL, not public domain #1336
* Restore standard behavior with ```__pycache__``` folder and pyc files #1333
* Fix pyver_re to not catch python-* packages #1342
* Fix erroneous file argument to logging call #1344
* Fix convert unix -> win  not creating entry point py scripts #1348
* Remove pytest timeout for tests.  It is responsible for intermittent CI test crashes.  #1351
* Fix retrieval of CONDA_NPY setting (only --numpy flag was being respected) #1356
* Fix --no-build-id argument to conda build that was note being respected #1359
* Fix handling of recipe folder specifications coming out blank or . #1360 #1391
* Handle conda 4.2 exceptions better for LinkErrors and PaddingErrors, better support OpenSSL custom prefix replacement #1362
* Fix indentation error leading to skip-existing not working #1364
* Fix skeletonize not passing arguments from CLI #1384 #1387 #1406
* Check if file exists before trying to use stat on it.  Might avoid mmap errors.  #1389
* Fix no include recipe option when input is metadata (as opposed to recipe file path) #1398
* Normalize slashes in examining files in tarfiles (always forward slashes) #1404

Contributors:
-------------

* @gabm
* @jakirkham
* @johanneskoester
* @mingwandroid
* @msarahan
* @mwcraig
* @soapy1
* @sooneecheah
* @yoavram


2016-09-06 2.0.1:
-----------------

Enhancements:
-------------

* Add disable_pip build option to disable conda's automatic add of pip/setuptools #1311
* Add numpy to pypi env creation if it is imported in setup.py #1289
* Improve compatibility with conda >=4.2 regarding prefixes that are too short #1323
* Delete .pyo files prior to compiling pyc files.  They are considered harmful.  #1328
* Add ```conda build purge-all``` command that cleans out built packages and build folders #1329

Bug fixes:
----------

* Use source.get_dir instead of config.workdir for source_files (was one level too low) #1288
* Import setuptools in windows.py to apply vc9-finding monkeypatch #1290
* Fix convert not updating subdir in index.json #1297
* Update post-build deprecation warning to state 3.0 as release for removal #1298
* Create pkgs folder if it does not exist #1299
* Fix warn_on_old_conda_build to ignore non-final release versions (alpha/beta/rc) #1303 #1315
* Remove coercion of pycache folder into flat pyc files #1304
* Fix metadata retrieval in bdist_conda #1308
* Add supplemental removal of cached packages when conda does not fully remove them #1309
* Simplify updating the package index #1309
* Straighten out when metadata member config is used, relative to config argument #1311
* Catch prefix length errors with OpenSSL's custom prefix replacement program #1312
* Replace all colons with _ in git mirror folders to avoid Windows path errors #1322
* Fix missing file contents in converted packages.  Test.  #1325

Contributors:
-------------

* jakirkham
* mingwandroid
* msarahan


2016-08-29 2.0.0:
-----------------

Notes here are a consolidation of all changes between 1.21.14 and 2.0.0.

Enhancements:
-------------

* Increase placeholder path to 255 bytes (affects only Linux/Mac. Packages need to be rebuilt to support longer embedded paths) #877
* Configuration is local, passed via config argument.  No more global config.  #953
* Created Python API in conda_build/api.py #953
* Separate build folders per-build to allow parallelism #953
* Add locking to allow safe parallelism #953
* Add build flag to turn off separate build folders (--no-build-id) #953
* Much greater test coverage across all modules #953
* Add CONDA_BUILD_STATE variable that reflects RENDER, BUILD, or TEST state of build #1232
* Add support for HG_ variables in meta.yaml templates (for hg repos) #207 #1234
* Add source_files test argument in meta.yaml to copy files from source into test #1237
* add a numpy.distutils patch to jinja templating, so that fortran projects using numpy can also use jinja2 (thanks @bladwig1) #1252
* Ensure that the build environment is on PATH during all tooling and testing #1256
* Make failure due to pip requirements in meta.yaml clearer #1279
* Allow API to accept either paths to meta.yaml files or MetaData objects, for better compatibility #1281
* Implement tests to verify api stability #1283
* Add build/noarch to recipe metadata.  Use for truly platform independent packages - same folder in every install. #1285

Bug fixes:
----------

* Fix error converting linux to win packages due to python version mismatch #481
* Fix infinite loop that occurred with circular dependencies being built #953
* Improve test data structures to allow profiling with pytest-profiling #953
* Fix version sorting in pypi skeleton generator #1238
* improve backwards compatibility* prefix build and test envs with _, so that conda can be installed in them #1242
* fix bdist_conda; add smoke test for it to Travis #1243
* fix windows entry points (duplicate bad logic) #1246
* fix inspect entry point in embedded conda.recipe #1251
* create build environment before looking for VCS in it.  #1253
* fix a deadlock with recursive environment creation on encountering packages with short prefixes #1257
 with conda commands #1259
* only compile pyc files if python is in the build prefix # 1261
* remove exception catch-all in build CLI, to show actual errors more #1262
* specify full paths to activate scripts to avoid PATH conflicts with virtualenv #1266
* clean up remnants of pipbuild #1267
* remove pyc files from any source_files arguments to test in meta.yaml (avoid __file__ errors) #1272
* copy files and folders when breaking hardlinks (rather than renaming) to avoid cross-filesystem errors #1273
* add Scripts folder to prepended binary paths searched on Windows #1276
* update MACOSX_DEPLOYMENT_TARGET hard-coded value to 10.7 (better fix soon) #1278
* disallow backslashes in meta.yaml fields describing paths (e.g. always_include_files) #1280
* prevent GIT_* env vars from containing newlines #1282
* restore prefix-lengths inspect command (lost in merging) #1283

Restructuring:
--------------

* CLI scripts have been gutted and moved to conda_build/cli.  Content from them is in
  conda_build, in scripts without main_ prefix.  #953
* Skeleton generators have been broken out of main_skeleton.py, and consolidated into
  conda_build/skeletons.  The contents of this folder are examined at runtime for pluggability.  #953

Contributors:
-------------

* @bladwig1
* @brentp
* @heather999
* @jakirkham
* @mingwandroid
* @msarahan
* @melund
* @pigmej

Testers:
--------

* @dsludwig
* @ericdill
* @jakirkham
* @mingwandroid
* @pitrou
* @srossross


2016-08-26 2.0.0beta4:

Bug fixes:
----------

* improve backwards compatibility with conda commands #1259
* only compile pyc files if python is in the build prefix # 1261
* remove exception catch-all in build CLI, to show actual errors more #1262
* specify full paths to activate scripts to avoid PATH conflicts with virtualenv #1266
* clean up remnants of pipbuild #1267
* remove pyc files from any source_files arguments to test in meta.yaml (avoid __file__ errors) #1272
* copy files and folders when breaking hardlinks (rather than renaming) to avoid cross-filesystem errors #1273
* add Scripts folder to prepended binary paths searched on Windows #1276
* update MACOSX_DEPLOYMENT_TARGET hard-coded value to 10.7 (better fix soon) #1278

Contributors:
-------------

* @dsludwig (testing)
* @ericdill (testing)
* @jakirkham (testing)
* @mingwandroid (testing)
* @msarahan
* @pitrou (testing)
* @srossross (testing)


2016-08-23 2.0.0beta3:

Enhancements:
-------------

* add a numpy.distutils patch to jinja templating, so that fortran projects using numpy can also use jinja2 (thanks @bladwig1) #1252

Bug fixes:
----------

* prefix build and test envs with _, so that conda can be installed in them #1242
* fix bdist_conda; add smoke test for it to Travis #1243
* fix windows entry points (duplicate bad logic) #1246
* fix inspect entry point in embedded conda.recipe #1251
* create build environment before looking for VCS in it.  #1253
* fix a deadlock with recursive environment creation on encountering packages with short prefixes #1257

Contributors:
-------------

* @bladwig1
* @ericdill (testing)
* @jakirkham
* @mingwandroid (testing)
* @msarahan


2016-08-22 2.0.0beta2:

This release includes all current (1.21.14) changes made to the 1.21.x series.

Enhancements:
-------------

* Configuration is local, passed via config argument.  No more global config.  #953
* Created Python API in conda_build/api.py #953
* Separate build folders per-build to allow parallelism #953
* Add locking to allow safe parallelism #953
* Add build flag to turn off separate build folders (--no-build-id) #953
* Much greater test coverage across all modules #953
* Add CONDA_BUILD_STATE variable that reflects RENDER, BUILD, or TEST state of build #1232
* Add support for HG_ variables in meta.yaml templates (for hg repos) #207 #1234
* Add source_files test argument in meta.yaml to copy files from source into test #1237

Bug fixes:
----------

* Fix error converting linux to win packages due to python version mismatch #481
* Fix infinite loop that occurred with circular dependencies being built #953
* Improve test data structures to allow profiling with pytest-profiling #953
* Fix version sorting in pypi skeleton generator #1238

Restructuring:
--------------

* CLI scripts have been gutted and moved to conda_build/cli.  Content from them is in
  conda_build, in scripts without main_ prefix.  #953
* Skeleton generators have been broken out of main_skeleton.py, and consolidated into
  conda_build/skeletons.  The contents of this folder are examined at runtime for pluggability.  #953

Contributors:
-------------

* @melund
* @msarahan
* @pigmej


2016-08-18 1.21.14:

Bug fixes:
----------

* fix pyc compilation when egg files/folders are present #1225

Contributors:
-------------

* @msarahan


2016-08-18 1.21.13:

Enhancements:
-------------

* use git -am when applying git patches, so that patches better retain git history #1222
* allow relatively pathed git submodules #1222
* add guess_license_family to pypi skeleton generator #1222

Bug fixes:
----------

* fix typo in convert.py

Contributors:
-------------

* @mingwandroid
* @msarahan


2016-08-17 1.21.12:
------------------

Enhancements:
-------------

* Whitelist the CPU_COUNT environment variable. #1149
* Add tool for examining prefix length in existing packages #1195
* Add a conda interface layer for better compatibility with conda 4.2 #1200 #1203 #1206
* Document how to run tests #1205
* Update default versions for R (3.3.1) and Perl (5.20.3) builds #1220

Bug fixes:
----------

* Don't compile .py files in executable locations.  Compile one at a time.  #1186
* Don't force download if vcs is used as a source #1212
* Break hardlinks as a post-install step.  Hard links can cause problems at package install time.  #1215
* Make environment variables used by conda in environment creation always be bytestrings #1216 #1219


Contributors:
-------------

* @jakirkham
* @kalefranz
* @msarahan


2016-08-06 1.21.11:
-------------------

Bug fixes:
----------

* Correct logic for printout of meta.dist determination #1174
* Attempt to use src_dir instead of WORK_DIR for directory creation #1175
* Fix escaping problem with PY_VCRUNTIME_REDIST setting #1172
* Set build prefix for win by path, not name #1172
* Quote INCLUDE and LIB env var settings for win better #1172
* Fix pypi skeleton package search #1181

Contributors:
-------------

* @msarahan
* @pelson

2016-08-02 1.21.10:
-------------------

Bug fixes:
----------

* Compile files ending with .py, not py.  #1163
* Move root logger to entry points, to not interfere with conda #1164 #1166
* Use setuptools entry points, rather than pre-defined scripts #1165
* Always use the long build prefix to avoid confusion #1168

Contributors:
-------------

* @mingwandroid
* @msarahan


2016-08-01 1.21.9:
------------------

Bug fixes:
----------

* Add debug option that shows conda output during build.  Hide output otherwise.  #1159
* Add regression test for conda metapackage command, fix missing token and user args. #1160
* Create croot (conda-bld) folder if missing before locking in render and skeleton. #1161

Contributors:
-------------

* @msarahan


2016-07-31 1.21.8:
------------------

Bug fixes:
----------

* Fix --source argument to build - was building when should only download source.  #1152
* Don't try to create work folder when it exists (but is empty) #1153
* Fix a logic error with need_source_download not existing #1148

New Things:
-----------

* Don't exit on compileall failure #1146
* Add CONDA_BUILD_RENDERING environment variable that is set during recipe rendering #1154
* Change pyc compilation to only affect files that would be packaged (not all of site-packages).  Compile pyc files on py3.  #1155
* Rename load_setuptools to load_setup_py_data (keep load_setuptools for compat; but show warning) #1156
* Test that condarc channels are respected in build #1157

Contributors:
-------------
* @daler
* @minrk
* @msarahan


2016-07-22 1.21.7:
------------------

Bug fixes:
----------

* Add test of requirements.txt parsing for runtime requirements #1127
* Set PY_VCRUNTIME_REDIST for VS 2015+, so that DLL linkage is used #1129
* Use os.path.normpath in find_lib #1132
* Fix path prepending in test (use only PATH, and use consolidated code) #1135
* Add dist split for channel names #1136
* Provide fallback path to render recipe when build environment is necessary for rendering #1140
* Sort package versions coming from PyPI for skeleton #1141

Contributors:
-------------

* @mingwandroid
* @msarahan


2016-07-14 1.21.6:
------------------

New Things:
-----------

* Allow pass-through of setup.py options in conda skeleton pypi #680
* Allow specification of pinning numpy in conda skeleton pypi #680
* Support PEP420 namespace packages (don't barf on existing folders.)  Do barf on existing files.  #1074


Bug fixes:
----------

* Fix handling of quotes in selectors #1104
* Fix load_setuptools in jinja context.  Problem was incorrect cwd in function. #1106
* Make Win activate script file extensions explicit #1107
* Warn users on failed git repo info failure, rather than crash #1108
* Remove killing MSBuild.exe at end of win build.  Remove psutil dependency.  #1109
* Prepend PATH before creating env, to ensure post-link script success.  #1115, #1118
* Make Python tests drop out on failure appropiately on win  #1122
* Make hyphenation consistent with include_recipe in meta.yaml  #1124
* Use full path of test env when activating #1125

Contributors:
-------------

 * @ikalev
 * @msarahan
 * @mwcraig

2016-07-07 1.21.5:
------------------

Bug fixes:
----------

 * Make --skip-existing respect remote channels (s3, file, anaconda.org) #1102
 * Reduce always_include_files glob fail exit to a warning #1101
 * Fail more gracefully when finding a vcs executable fails #1100
 * Add better error when PyPI fails with XMLRPC.  Add tests for published examples. #1098
 * Fix lack of 'call' in windows test activate script that was terminating tests early #1097
 * Take newest version from PyPI when creating skeleton #1092
 * Fix unicode encoding error in conda skeleton pypi #1092
 * Support PEP420 namespace packages (write into existing folders,
   but raise error rather than overwrite existing files. #1090
 * Fix an error where an intermediate None value broke jinja2 rendering #1088
 * Add missing support for include_recipe in meta.yaml #1085

Contributors:
-------------
 * @ikalev
 * @msarahan


2016-07-05 1.21.4:
------------------

Bug fixes:
----------

 * Choose newest Pypi skeleton version; fix unicode encoding in pypi metadata #1092
 * Add Numpy 1.11 to all_versions dict for autocompletion #1078
 * Fix MSVC 3.3/3.4 builds when Win7SDK not installed #1072
 * Fix an error with build number, when build number is None or otherwise invalid #1088

Known issues:
-------------

 * Environment activation requires conda >=4.1.6.  The activate.bat script does not look in the right place for the activate.d folder.
 * The test suite on Linux and Mac fails the python-build, python-run, and python-build-run tests, because an errant __conda-version__.txt file is somehow present.  It is not clear where it comes from, and each of these tests pass when run individually.  If you have mysterious issues, and you use __conda-version__.txt or files like it, please file an issue.

Contributors:
-------------
 * @adament
 * @aleksey
 * @ikalev
 * @msarahan


2016-06-27 1.21.3:
------------------

Bug fixes:
----------

 * Fix a regression in Windows, where a compiler was a hard requirement, and was not always showing up, anyway.  #1049

Contributors:
 * @msarahan

2016-06-24 1.21.2:
------------------

Bug fixes / Improvements:
-------------------------

 * revert some MSVC activation logic to still call vcvarsall directly in build script
 * fix Windows testing for binary prefix replacement (not done on win)
 * Add a warning message when conda-build can't create an environment due to unsatisfiable dependencies
 * Improve notion of whether a recipe uses a VCS in its metadata, or in its build

Known issues:
-------------

 * Environment activation on Windows will not work until Conda 4.1.4 is released.  The activate.bat script does not look in the right place for the activate.d folder.
 * The test suite on Linux and Mac fails the python-build, python-run, and python-build-run tests, because an errant __conda-version__.txt file is somehow present.  It is not clear where it comes from, and each of these tests pass when run individually.  If you have mysterious issues, and you use __conda-version__.txt or files like it, please file an issue.

Contributors:
-------------
 * @msarahan
 * @patricksnape

2016-06-22 1.21.1:
------------------

Bug fixes / Improvements:
-------------------------

 * Simplify MSVC activation, using distutil's existing logic #1036
 * Correctly interpret paths returned from git on windows, trying cygpath, falling back to conda regex #1037
 * Fix ability to disable anaconda upload in condarc #1043
 * Change environment activation to call activation in scripts, rather than having Python store variables #1044

Contributors:
-------------
 * @msarahan
 * @mwcraig
 * @patricksnape


2016-06-15 1.21.0:
------------------

New stuff:
----------
 * Add FEATURE_ environment variables for MKL, opt and debugging #978
 * add info/about.json file that contains the "about" section of meta.yaml #941
 * allow ```--dirty``` flag to be passed to ```conda build``` command. Skips
   download, and provides DIRTY environment variable in build scripts. #973
 * Add msys2 paths to build and test environments #979
 * add new x86 and x86_64 selectors for Intel platforms #986
 * keep original meta.yaml in recipe folder of package; create meta.yaml.rendered in recipe folder.  Neither exist when recipe not included.  #1004
 * add ignore_prefix_files key to build in meta.yaml. Can ignore list of files,
   or True to ignore all prefix files. #1008 #1009
 * Automatically determine patch strip level #1011

Bug fixes/Improvements:
-----------------------
 * Lightened requirement that x.x be defined in both build and runtime sections.  #650
 * Remove info/recipe.json from build conda packages.  Superseded by info/recipe/meta.yaml.rendered.  #781
 * Search for single and double backslashes when finding files that need prefix replacement #962
 * Track undefined jinja variables and use them to decide whether to download source #964
 * handle patches with p0 or p1 #969, #1011, #1020
 * only set os.environ for non-None variables #981
 * Don't use long prefixes on windows #985
 * Fix missing encoding argument #987
 * Respect proxy variables more appropriately #989
 * Search packages on PyPI, rather than listing them all.  Should avoid some timeout errors there. #991
 * Fix unix-style paths returned from git on Windows preventing relative paths from providing Jinja2 metadata #995
 * improve logic handling "dirty" downloading.  Always download when not dirty.  #995
 * Fix post-build variables when no build section existed in original meta.yaml #999
 * Activate _build and _test environments approriately, rather than manipulating PATH directly #1002
 * Don't clone git submodules until after first checkout #1025
 * Move check_install over from conda.install #1027

Deprecations:
-------------
 * __conda_version__.txt and other post-build methods of altering the build
   string are marked as deprecated. Prefer Jinja2 templates where possible.
   Create issues if this breaks your work.

Contributors:
-------------
 * @filmor
 * @ilanschnell
 * @jschueller
 * @mingwandroid
 * @msarahan
 * @pelson
 * @stuarteberg
 * @whitequark


2016-06-05 2.0.0beta:
---------------------

Compatibility breaks:
---------------------
* Increase placeholder path to 255 bytes (affects only Linux/Mac.  Packages need to be rebuilt to support longer embedded paths) #877

Bug fixes/Improvements:
-----------------------
* Respect proxy variables more appropriately #989
* Fix post-build variables when no build section existed in original meta.yaml #999
* Fix unix-style paths returned from git on Windows preventing relative paths from providing Jinja2 metadata #995
* improve logic handling "dirty" downloading.  Always download when not dirty.  #995
* Search packages on PyPI, rather than listing them all.  Should avoid some timeout errors there. #991
* Lightened requirement that x.x be defined in both build and runtime sections.  #650
* Search for single and double backslashes when finding files that need prefix replacement #962
* Fix missing encoding argument #987
* Don't use long prefixes on windows #985
* only set os.environ for non-None variables #981
* Track undefined jinja variables and use them to decide whether to download source #964
* handle patches with p0 or p1 #969

New stuff:
----------
* Add FEATURE_ environment variables for MKL, opt and debugging #978
* add new x86 and x86_64 selectors for Intel platforms #986
* add info/about.json file that contains the "about" section of meta.yaml #941
* Add msys2 paths to build and test environments #979
* allow ```--dirty``` flag to be passed to ```conda build``` command.  Skips download, and provides DIRTY environment variable in build scripts.  #973

Contributors:
-------------
* @filmor
* @heather999
* @ilanschnell
* @jschueller
* @mingwandroid
* @msarahan
* @pelson
* @stuarteberg
* @whitequark


2016-05-13 1.20.3:
------------------
Features:
 * use posix metapackage for cran skeleton packaging (#956)

Bug fixes:
 * fix output of package paths (extra output was breaking tools).  Add tests. (#950)
 * change default of no_download_source in build.py (for compatibility with conda-build-all) (#950)
 * fix regression in [] being confused for selectors (#957)

2016-05-13 1.20.2:
------------------
Features:
 * added --token and --user flags to pass corresponding information to anaconda upload (#921)
 * added conda render command that outputs a fully-rendered meta.yaml to either stdout, or to file (with --file) (#908)
 * support source checkout tools specified in meta.yaml. If source checkout fails at the rendering phase, source checkout and rendering are re-done after the build environment is created. (#843, #946)
 * fn is now optional when a URL specifies a filename. (#942)
 * CRAN skeleton generator now uses MSYS2 for Windows support (#942)
 * conda build & conda render both recursively look for meta.yaml (support conda-forge feedstock submodules) (#908)
 * Whitelist MAKEFLAGS environment variable. Setting this outside conda build should take effect in your build. Parallelize on *nix by adding -j here, instead of -j${CPU_COUNT} in your build.sh. This helps on CI's, where CPU_COUNT is not always well-behaved. (#917)
 * Run python_d executable on windows when debug feature is active (#724)
 * add conda build flag --keep-old-work that temporarily moves your last build, then moves it back after completion. For debugging, when more than one package is involved. (#833)
 * Allow selectors in imported jinja templates (#739)

Bug fixes:
 * fixed several instances wherein --skip-existing did not work (#897, #945)
 * Fully render recipe before outputting build string  * fixes empty spots where GIT_* info should have been (#923)
 * Add MSYS2 path conversion filters to avoid issues with Win 7.1 SDK (#900)
 * Address PyPI's change of URL format (#922,
 * Fix invalid gcc "-m 32" flag (#916)
 * Fix empty section (due to selectors) handling regression (#919)
 * Fix regression in handling of VS2008 Pro (not Express + VC for Python 2.7). It is important to at least try to run vcvarsall.bat. (#913)
 * Fix CPAN skeleton generator (handle missing sections better) (#912)
 * Make test/requires versions match build/requires without additional pinning (#907)
 * Remove hard-coded CYGWIN path from conda-build's custom PATH (#903)
 * Source is downloaded before testing, fixing an issue where if build machine and some other test machine had different source, strange things happened. (#946)
 * Fix regression with Python 3.x fixing shebangs (#892)
 * Fix conda inspect crashes by using conda-meta info rather than filenames or dist names for package info (#947)

Miscellany:
 * restore AppVeyor testing for Windows builds (#864)
 * Build py3.5 on Appveyor (#938)
 * PEP8 cleanup; use flake8 rather than pyflakes (#938)
 * limited scope of project locking to avoid lock conflicts between build and rendering (#923)
 * set up anaconda.org build infrastructure (#924)
 * on Windows, environment variables are written to the temporary bld.bat in the source work folder. (#933)


2016-04-21   1.20.1:
--------------------
  * fix source/path and GIT_* issues, #801
  * fix invalid assertion, #855
  * environ.py refactor/clenup, #856
  * Better messaging for yaml parsing errors, #862
  * fix typo, #863
  * make CONDA_PY and CONDA_NPY available in build.sh, #837
  * execute source fetchers (e.g., git, hg) in the _build environment, #843
  * use memory map rather than read() to reduce memory usage, #866
  * fix svn url on Windows in checkout tool test, #867
  * fix empty files bug, #869
  * improve Visual Studio logic, #861
  * add files in order of increasing size to improve access times to tar, #870
  * VS_YEAR, VS_VERSION, VS_MAJOR and CMAKE_GENERATOR environment variables, #872


2016-03-25   1.20.0:
--------------------
  * support for Lua as a built-in language (Alex Wiltschko), #719
  * allow additional keys in "about" section, #831
  * fix Examples directory in noarch_python, #838
  * revert OS X SIP fix, part of #808, #844
  * fixed race condition between removal and creation of tmp_dir on win, #847


2016-03-10   1.19.2:
--------------------
  * silence some errors when subprocessing git #790
  * fixes conda skeleton cran under python3 #817
  * fixes some bugs introduced with the #808 otools refactor, #821, #825
  * fixes #818 conda-build 1.19.1 breaks C compilation, #825
  * actually fix #807 recurisive builds after conda 4.0 release, #826
  * fixes #820 crash when building from a git repo on Windows, #824


2016-03-09   1.19.1:
--------------------
  * Environment variables defined in the 'script_env' build section of
    the meta.yaml file were previously assigned the value '<UNDEFINED>'
    if not found in the environment. Now they are left unset and a
    warning is raised instead, #763.
  * fix printing of NumPy 1.10 in help message, #776
  * add -m32 to CFLAGS and CXXFLAGS for multilib gcc, #775
  * fixes CYGWIN_PREFIX for drive letters other than C:, #788
  * fixes for noarch package building on Windows, #799
  * work-arounds for System Integrity Protection on OS X El Capitan, #808
  * fix recurisive builds after conda 4.0 release, #813


2016-01-29   1.19.0:
--------------------
  * normalize unicode in conda skeleton cran, #681
  * use /bin/sh on openbsd, #707
  * fail early during patching
  * use symlinks=True in copytree() for SVN sources, #665
  * support entry points with dots (to suppoer classes), #690
  * deprecate conda pipbuild in favor of conda skeleton. #710
  * fix Win references to PipBuild scripts, #723
  * allow git shallow clones, #604
  * remove broken license file detection code, about/license_file
    expects filename now
  * allow pinning dependencies when building a package, #741
  * fix to restore building for multiple python versions on Windows, #744
  * fix building (git unrelated things) when git is not installed, #745
  * enable tab completion for the packages argument of the conda inspect
    commands, #748


2015-11-19   1.18.2:
--------------------
  * move path prepending to function for uniformity, #601
  * improve yaml loading, #603
  * allow jinja2 templates to be located in current conda environment, #578
  * fix NPY_VER for versions >= 1.10 (Should be '1.10', not '1.1.0'), #660
  * create jinja2 environment with 'strict' mode for undefined values, #661
  * add a method to shell out and execute a command through subprocess, #621


2015-10-16   1.18.1:
--------------------
  * allow config system to handle versions with have more than a single digit
    in the minor version, #626
  * fix None encoding bug, #614
  * add missing Python version when adding Python to test specs
  * add features to build string
  * improve yaml loading (you don't have to quote version numbers anymore, eg.
    if the version is 3.1), #603


2015-10-01   1.18.0:
--------------------
  * develop options --build_ext, --clean_build_ext, #512
  * fix directory not existing when using --no-include-recipe option
  * add support for multiple rpaths on OS X to conda inspect
  * don't add 'np' to build string when package depends on numpy, but not
    a specific version
  * be more explicit when numpy version is included in dependency specs, #573
  * correctly remove egg directories on Windows, #536
  * add new option msvc_compiler to build section for forcing MSVC compiler
    version
  * add new command conda inspect channels --test-installable
  * fix a Unicode issue with conda skeleton cpan
  * when auto-adding python spec to execute run_test.py, don't require a
    specific version
  * add uninstall option to conda develop
  * give a better error message in skeleton pypi for packages with invalid
    urls
  * don't try to test skipped recipes
  * don't exit on a skipped recipe
  * recursively build packages from unsatisfiable install hints
  * make recursive building work better with --skip-existing
  * update CONDA_R to 3.2.2
  * fix encoding issues with git_info on Windows
  * test Python 3.5 in Travis CI
  * add support for absolute rpaths on Linux


2015-08-24   1.17.0:
--------------------
  * quote set calls in bld.bat
  * use the trash on Windows when deleting environments, see #521
  * improve documentation in noarch_python source
  * rename 'binstar' -> 'anaconda', see #519
  * allow blank sections in meta.yaml, see #533
  * add --no-include-recipe option to conda-build, see #535
  * add ability to add license file in info/license.txt, see #545
  * don't recursively build recipes more than once, #538
  * .git can be a file, #537


2015-07-30   1.16.0:
--------------------
  * handle trailing slashes in package names in conda skeleton cran
  * Cygwin git now works correctly.
  * the prefix itself is now included in the PATH in the test script on
    Windows (previously it was just the Scripts directory)
  * by default, recipes that runtime depend on numpy will no longer depend on
    an explicit version of numpy. The old behavior is still available by
    setting the CONDA_NPY environment variable or using conda build --numpy
  * add py35 variable to selector namespace
  * improve conda-meta untracked files error message
  * fix conda build --help in Python 2
  * add conda_build.sub_commands object which is a list of conda sub-commands


2015-07-22   1.15.0:
--------------------
  * fix conda skeleton cran --update-outdated --output-dir .
  * add argcomplete completers for recipes, --python, --numpy, --R, CRAN
    packages (with conda skeleton cran), and PyPI packages (with conda
    skeleton pypi)
  * conda develop now relinks object files on OS X (#490)
  * allow a glob for always-include-files
  * allow an extra section in meta.yaml, with free-form content (#483)
  * don't echo environment variables when building on Windows (#274)
  * add conda build --skip-existing
  * show default in help for conda skeleton --output-dir
  * add --update-outdated option to conda skeleton cran
  * skeleton: fix noarch_python option when build_comment is "#"
  * don't allow to build a package with the conda-meta directory
  * automatically remove a package of the recipe itself if it is installed as
    a build dependency
  * allow 'extra' key in meta.yaml, see #483
  * move echo command in Windows build, see #274
  * add regex to always included files, see #484
  * add strings in conda.config.non_x86_linux_machines, e.g. "ppc64le",
    as selector variables (renames armv6 to armv6l)


2015-06-29   1.14.1:
--------------------
  * add --size option to change RSA modulus length when generating RSA key
    pairs (defaults to 2048 bit)
  * make use of Crypto.Signature.PKCS1_PSS module, see #469
  * update default for CONDA_R to 3.2.0
  * manually install dependencies of recommended R packages in the
    build.sh, #457
  * fix issues when git commits have non-ASCII characters, #458
  * catch tarfile.ReadError in conda index, #460


2015-06-16   1.14.0:
--------------------
  * add support for signing packages, and indexing them, #430
  * removing LIBRARY_PATH and INCLUDE_PATH build environment variables on
    Unix, they where originally added in #228, but are causing problem for
    some people and are not really necessary
  * don't rename meta.yaml to meta.yaml.orig in the recipe that is copied into
    built packages
  * handle links to libraries that exist in multiple places better on OS X
  * add --no-remove option to conda index
  * various fixes for --python, --numpy, --perl, and --R
  * various cleanups for the command documentation
  * fix conda skeleton pypi --pypi-url
  * don't add the module name to the import tests in conda skeleton pypi
  * add --groupby option to conda inspect linkages
  * fix some incorrect "not found" instances from conda inspect linkages on OS
    X
  * don't include versions with restrictions in the build string
  * don't fail if conda-build cannot be found for the version check
  * remove special logic if the username on Windows is "builder"
  * conda skeleton pypi: add --noarch-python
  * fix issue with filenames with spaces in conda convert
  * place noarch packages in the noarch directory
  * handle tests_require in conda skeleton pypi
  * pipbuild: don't check if package already exists
  * skeleton pypi: remove --no-download option
  * add noarch option to pipbuild
  * add ability to sign packages


2015-05-19   1.13.0:
--------------------
  * skeleton pypi: fail better for packages with bad urls
  * fix summary in bdist_conda
  * fix compiling pyc files in Python 3
  * convert: correctly set the subdir key in the metadata
  * add --git-tag to skeleton cran
  * include LANG in the build environment
  * export proxy environment variables
  * fix conda skeleton cran --cran-url
  * set CONDA_DEFAULT_ENV in the build environment
  * fix conda index -c
  * correctly extract .tar.Z files
  * avoid infinite loops in conda skeleton pypi --recursive
  * add --all to conda inspect linkages and conda inspect objects
  * add --manual-url to skeleton pypi
  * fix issue where 'conda index' with old packages would create bad metadata
  * resolve circular dependencies in conda-skeleton (#409)
  * use versioneer 0.14 (#385)
  * always_include_files errors out (exits) on files that aren't there (#387)
  * automatically lowercase the package name in bdist_conda (see
    aplpy/aplpy#259)


2015-04-28   1.12.1:
--------------------
  * fix regression in always_include_files that causes build failure (#386)


2015-04-10   1.12.0:
--------------------
  * correctly fix egg directories that are part of the package
  * use the --force-rpath flag to patchelf
  * update MACOSX_DEPLOYMENT_TARGET to 10.6
  * fix running tests for Python packages whose version differs from the
    version in conda
  * fix some Python 3 issues with pipbuild
  * don't allow packages to depend on themselves
  * allow to use the r- prefix in conda skeleton cran
  * make recommended r packages depend on r-base in skeleton cran
  * new post-build logic on OS X. All libraries on OS X now include LC_RPATH,
    which points to the environment lib directory, and use and install name
    using @rpath
  * don't set DYLD_FALLBACK_LIBRARY_PATH in cran recipes (the new LC_RPATH
    logic on OS X makes this unnecessary)
  * fix conda build --build-only when the long build prefix is used
  * make conda inspect linkages work on OS X
  * don't hide the traceback for maximum recursion depth exceeded errors
  * add conda inspect objects, for inspecting object files in packages
    (OS X only)
  * add --untracked flag to conda inspect linkages
  * build R packages against a specific version of R
  * decompress .tar.z files
  * add support for GitHub urls in conda skeleton cran


2015-03-05   1.11.0:
--------------------
  * add 'script_env' key in build section of meta.yaml file, which is a list
    of environment variable names which are made available in the build
    script.  If a variable is listed here, but is not in the environment,
    the value '<UNDEFINED>' is assigned.
  * Handle OSError in conda index
  * Fix how the PATH environment variable is set on Windows
  * Remove the work directory earlier in the build
  * Give a helpful error message for dependencies like "python >= 2.7"
  * Add CYGWIN_PREFIX environment variable on Windows
  * Handle list requires in skeleton pypi
  * Correctly fail if the Windows bld.bat exits 1
  * Give a better error message if no urls can be found for a package
  * Add __main__ to allow python -m conda_build
  * %R% is now set to R.exe instead of R.bat on Windows
  * Write the build script to the source directory for build/script instead of
    the recipe directory.
  * Handle non-directories in copy_into (avoids an OSError, #332)
  * Halt the build on YAML error without jinja2
  * Clone git sources with the --recursive option
  * Add --channel and --override-channels to conda build. -c is changed to
    mean --channel instead of --check.
  * Add --check-md5 flag to conda index
  * Look for vcvarsall.bat from the Microsoft Visual C++ Compiler for Python 2.7
  * Use PyPi XMLRCP client search in order to ignore case for PyPi package
    names in pipbuild


2015-02-10   1.10.2:
--------------------
  * don't set the GIT_* environment variables when the source is not a git repo
  * skeleton cran: add extra metadata from CRAN to the recipe
  * skeleton pypi: fix there not being a fragment in a url
  * don't match comment only lines as selectors


2015-02-06   1.10.1:
--------------------
  * greatly improved ability to create noarch_python packages, #317
  * added 'subdir' key to info/index.json
  * allow url to be a list or urls, which are tried until one works
  * use quotes instead of !!str for versions from the conda skeleton commands
  * add conda skeleton cran to generate recipes for packages from CRAN
  * add support for adding a readme to a recipe
  * add a --quiet option to conda convert


2015-01-15   1.10.0:
--------------------
  * automatically convert absolute symlinks to paths in the build prefix to
    relative ones.
  * error if there are symlinks to the source directory.
  * use the placeholder prefix in text files rather than the build prefix
  * allow non-Python packages to be converted to other platforms with conda
    convert
  * new command conda inspect for inspecting packages. The only subcommand so
    far is conda inspect linkages, which shows the dynamic linkages of the
    shared object files on Linux.
  * correctly handle Unix style has_prefixes on Windows
  * run the tests in Binstar build
  * only modify egg directories that are part of the package being built
  * don't exclude .dylib files from prefix replacement
  * ability to build noarch packages
  * allow specifying files to always include
  * fix for building dependencies in some cases
  * print the correct thing for binary files detected with a prefix


2014-11-18   1.9.1:
-------------------
  * set PYTHONNOUSERSITE=1 while running build scripts
  * conda index: add error if they try to mix their packages into Anaconda
    channel
  * fix building recipes with local git urls in Windows
  * warn if conda-build is out of date


2014-10-22   1.9.0:
-------------------
  * adapt tests for Windows
  * don't use the long build prefix if the short build prefix is already long
  * support rewriting library load path for libraries that are in
    subdirectories of lib/ on OS X
  * allow 'git_rev' as a valid key in 'source', which is identical in behavior
    to git_branch and git_tag (all checkout the given revision)
  * also grab the full HEAD sha1 and shove it into the environmental
    variable GIT_FULL_HASH
  * automatically detect text prefix files
  * add detect_binary_files_with_prefix flag to meta.yaml to automatically
    detect binary files with the prefix and add them to
    binary_has_prefix_files
  * fix git_info when the author or commit message contains Unicode characters
  * allow to pass a url to skeleton pypi
  * add NPY_VER environment variable
  * fix conda convert --show-imports
  * give better error message when encountering a corrupt tarfile in conda
    index
  * print{ some more helpful information about what is going on at the
    beginning of a build
  * allow source/path in the meta.yaml to specify a path to the source (which
    can be relative to the recipe directory)
  * support xz files in Python 3 without requiring unxz
  * put spaces after skeleton pypi comments
  * correctly detect when to preserve the egg directory and depend on
    setuptools in skeleton pypi
  * set LIBRARY_PATH and INCLUDE_PATH when building on Unix
  * allow selectors to have text after them if they are in a comment
  * add CPU_COUNT environment variable to the build


2014-09-19   1.8.2:
-------------------
  * add substantially more tests
  * add ability to set additional rpath directories using build/rpaths
  * patch command on windows no-longer takes the --binary option
  * fix post processing so that name-space packages can be 'flattened' into
    a single directory
  * don't remove the .svn directory when doing a svn checkout


2014-09-03   1.8.1:
-------------------
  * has_prefix paths must always use /, even on Windows
  * fix bug in Windows Python 2
  * add .travis.yml
  * allow recipes to use requirements.txt
  * fix building a package that has Mach-O stub files
  * fix recursive package building
  * handle empty data size in pypi
  * allow an explicitly set empty version string


2014-08-22   1.8.0:
-------------------
  * add ability to convert Golke's Windows packages into conda
    packages, use "conda convert <Gohlke>.exe".  See also:
    http://www.lfd.uci.edu/~gohlke/pythonlibs/
  * handle spaces on Windows better
  * add croot to the module level of conda_build.config for backwards
    compatibility
  * changed extra long prefix for building to _placehold...


2014-08-20   1.7.1:
-------------------
  * add --all-extras flag to skeleton pypi
  * automatically use the long or short build prefix as needed
  * fix to allow specification of full major.micro.minor for numpy, python,
    and perl (only add the build string if it is an exact major.minor or
    major.minor.patch version. If it is an inequality, it is not added)


2014-08-05   1.7.0:
-------------------
  * better install_requires parsing for skeleton pypi
  * the build environment from conda-build is now called _build___...
    This is so that recipes with binary_has_prefix_files build against a
    sufficiently long prefix.
  * don't overwrite the input file in convert
  * fix a bug related to the prefix_files.txt file
  * show the download bytes in human form in skeleton pypi
  * make patchelf error message clearer
  * fix some issues with the git describe environment variables
  * improve shebang line modifications with python.app
  * show the download bytes in human form in skeleton pypi

2014-07-29   1.6.1:
-------------------
  * fix an issue building with a git repository in Python 3

2014-07-29   1.6.0:
-------------------
  * don't fail on MachO stub files on OS X
  * add some git describe related environment variables when the source is a
    git repository
  * add --python and --numpy flags to conda build, which do the same thing as
    setting CONDA_PY and CONDA_NPY
  * allow a . in CONDA_PY and CONDA_NPY
  * correctly catch RuntimeError
  * fix an issue building some packages on Windows
  * make skeleton pypi --recursive work with versioned dependencies
  * some additional type checking for meta.yaml
  * always include numpy in skeleton pypi

2014-07-03   1.5.0:
-------------------
  * add bdist_conda
  * fix features and track_features
  * detect files with the build prefix automatically on Windows

2014-07-01   1.4.0:
-------------------
  * fix skeleton pypi behind a proxy
  * add binary_has_prefix_files, which does a binary prefix replacement
  * fix skeleton pypi on Windows
  * allow the git_url to be a relative path to the recipe directory


2014-06-04   1.3.5:
-------------------
  * the yaml script tag was only written if build.sh already existed,
    see issue #105
  * use tests_require to fill in test requirements in the setuptools
    template, see issue #107


2014-06-02   1.3.4:
-------------------
  * add --build-only and --post flags to conda-build
  * add conda convert -p all
  * allow to set __conda_buildnum__.txt and __conda_buildstr__.txt, analogous
    to __conda_version__.txt


2014-04-28   1.3.3:
-------------------
  * add SHA256 support for downloaded source
  * conda convert now creates platform directories, like
    win-32/converted_package.tar.bz2
  * allow to specify the version of python, numpy, or perl in the meta.yaml
    (it will ignore the CONDA_PY, CONDA_NPY, or CONDA_PERL, respectively, in
    this case)


2014-04-15   1.3.2:
-------------------
  * allow changing conda-bld directory (which is by default <root>/conda-bld
    when the conda root is not writable, and ~/conda-bld otherwise), to be
    changed by CONDA_BLD_PATH environment variable or conda-build: root-dir:
    in condarc file
  * add build/has_prefix_files
  * remove broken conda-build/build_dest
  * fix build in Windows Python 2
  * add --quiet option to conda-build
  * add check for characters in package name dependencies
  * add .class to the object file extension blacklist
  * removed build/no_softlink in favor of build/no_link with list of glob
    syntax


2014-03-25   1.3.1:
-------------------
  * add conda metapackage command
  * fix recursive conda building when dependencies are nested more than one
    level deep.
  * fix build in Windows Python 2
  * fix skeleton pypi for packages whose setup.py has __future__ imports
  * add conda pipbuild command which uses a simple recipe based on pip
    install to build a conda package
  * fix skeleton pypi and pipbuild when package data does not have classifiers
  * add a basic conda develop command
  * add the --recursive option to conda skeleton pypi
  * conda skeleton pypi no longer asks about single line licenses
  * conda skeleton pypi now queries pypi case insensitively
  * conda skeleton pypi now works in a different conda environment. This
    avoids anything bad that might happen when trying to get the metadata from
    the package from messing up the root environment.
  * conda skeleton pypi now patches distribute directly. This is more robust
    than trying to insert a patch into setup.py, as was done previously.
  * allow to set the version post-build by writing a __conda_version__.txt
    file to the source directory.
  * add ability to skip binary relocation step by
    setting "build/binary_relocation: False" in meta.yaml


2014-03-14   1.3.0:
-------------------
  * add skeleton for CPAN Perl packages, issue #53. Unlike
    the PyPI skeleton, it supports a --recursive option to
    also generate the recipes for all of the dependencies of
    a given module/distribution
  * add support for run_test.pl and Perl import tests when
    building Perl packages
  * add CONDA_PERL environment variable support for
    determining which version of Perl to build packages for.
    Unlike CONDA_PY, this must include the full version with
    periods (e.g., 5.18.2)
  * automatically build packages for dependencies if the recipe is
    present in the current working directory
  * fix a number of Python 3 compatibility issues, issue #59
  * work with source files with uppercase suffixes
  * switch from chrpath to patchelf on Linux, issue #57
  * don't use hard-coded msvc path
  * sort import tests from skeleton pypi


2014-02-25   1.2.1:
-------------------
  * added conda-build/build_dest option to condarc


2014-02-13   1.2.0:
-------------------
  * make sure WORK_DIR exists
  * use MSVC 2010 for Python 3
  * include the summary with conda skeleton pypi
  * fix object detection on Python 3
  * update default CONDA_NPY to 18


2014-02-06   1.1.0:
-------------------
  * add ability to use templates in conda recipes
  * remove fallback to <root>/conda-recipes, i.e. conda-build always
    expects the full path to the recipe
  * export PKG Build Number
  * add pre-link to package, when it is found in recipe
  * allow to add run_test.sh or run_test.bat, which will be run automatically
    during the test phase.
  * Test commands from the test/commands section of meta.yaml are run from
    bash on Linux and OS X and batch on Windows (previously they were run
    using Python's subprocess).
  * all environment variables from the build process are available during the
    tests, except with the build prefix replaced with the test prefix.


2014-01-24   1.0.0:
-------------------
  * initial release
  * includes conda-build, conda-convert, conda-index, conda-skeleton
  * depends on new conda version 3
  * add license to info/index.json object
