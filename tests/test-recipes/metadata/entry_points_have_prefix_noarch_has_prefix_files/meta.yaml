{% set name = "ephpnhpf" %}
{% set version = "0.0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  path: .

build:
  number: 0
  noarch: python
  skip: True  # [win]
  script:
    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv
    # We use 'somewhere' instead of 'bin' here because conda-build is quite broken in what it considers
    # and entry point script when you use noarch: python, involving finding files in 'bin' that contain
    # prefix and making assumptions about that (we could check for python in the shebang at least, but
    # even that doesn't indicate it is definitely an entry_point script!).
    - mkdir -p ${PREFIX}/somewhere  # [not win]
    - echo ${PREFIX} > ${PREFIX}/somewhere/explicitly-listed-text-file-containing-prefix  # [not win]
    - echo ${PREFIX} > ${PREFIX}/somewhere/explicitly-not-listed-text-file-containing-prefix  # [not win]
    - mkdir %PREFIX%\somewhere  # [win]
    - echo %PREFIX% > %PREFIX%\somewhere\explicitly-listed-text-file-containing-prefix  # [win]
    - echo %PREFIX% > %PREFIX%\somewhere\explicitly-not-listed-text-file-containing-prefix  # [win]
  has_prefix_files:
    - somewhere/explicitly-listed-text-file-containing-prefix
  # It is not possible to build noarch: python packages on Windows without specifying the entry points
  # as conda-build will complain about the pip-created exe.
  entry_points:  # [win]
    - test_entry_points_have_prefix_CASED = entry_points_have_prefix:main.main  # [win]

requirements:
  host:
    - python
    - pip
    - setuptools
  run:
    - python

test:
  requires:
     - ripgrep
