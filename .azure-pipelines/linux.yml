parameters:
- name: serial_or_parallel
  default: ''

jobs:

- job: 'Linux_${{ parameters.serial_or_parallel }}'
  pool:
    vmImage: ubuntu-18.04
  strategy:
    maxParallel: 10
    matrix:
      # py37-canary:
      #   PYTHON_VERSION: '3.7'
      #   CONDA_VERSION: 'release'
      py37-release:
        PYTHON_VERSION: '3.7'
        CONDA_VERSION: 'release'
      # py38-canary:
      #   PYTHON_VERSION: '3.8'
      #   CONDA_VERSION: 'release'
      py38-release:
        PYTHON_VERSION: '3.8'
        CONDA_VERSION: 'release'
      py39-release:
        PYTHON_VERSION: '3.9'
        CONDA_VERSION: 'canary'
  timeoutInMinutes: 120
  steps:
  - script: |
      set -e -u
      sudo apt update
      sudo apt install attr -y
      source ci/azurepipelines/activate_conda "/usr/share/miniconda/bin/python"
      conda info
      ps -ef | grep $$
      conda list
      grep '^#' "${CONDA_PREFIX}/conda-meta/history"
      conda install python=$PYTHON_VERSION -y
      mkdir -p /usr/share/miniconda/locks
      mkdir -p /usr/share/miniconda/bin
      chmod a-w /usr/share/miniconda/locks
      if [ "$CONDA_VERSION" = "release" ]; then
        conda update -y conda
      else
        conda install -y -c conda-canary conda
      fi
      conda config --set always_yes yes
      conda config --set auto_update_conda False
      conda info

      source ci/azurepipelines/install_conda_build_test_deps

      pip install --no-deps .

      conda info -a

      source ci/azurepipelines/setup_pytest_replay

    displayName: Preparing test environment

  - script: |
      set -e -u
      source ci/azurepipelines/activate_conda "/usr/share/miniconda/bin/python"
      conda install conda-verify -y
      py.test --color=yes -vv -n 0 --basetemp /tmp/cb_serial --cov conda_build --cov-report xml -m "serial" tests --test-run-title="Linux-SerialTests-$CONDA_VERSION-Py$PYTHON_VERSION" "${PYTEST_REPLAY_OPTIONS[@]+"${PYTEST_REPLAY_OPTIONS[@]}"}"
    displayName: 'Serial Tests'
    condition: and(succeeded(), eq('${{ parameters.serial_or_parallel }}', 'serial'))

  - script: |
      set -e -u
      source ci/azurepipelines/activate_conda "/usr/share/miniconda/bin/python"
      conda remove conda-verify -y
      echo "safety_checks: disabled" >> ~/.condarc
      echo "local_repodata_ttl: 1800" >> ~/.condarc
      mkdir -p ~/.conda
      conda create -n blarg1 -yq python=2.7
      conda create -n blarg3 -yq python=3.7
      conda create -n blarg4 -yq python nomkl numpy pandas svn
      source ci/azurepipelines/activate_conda "/usr/share/miniconda/bin/python"
      py.test --color=yes -vv -n auto --basetemp /tmp/cb --cov conda_build --cov-append --cov-report xml -m "not serial" tests --test-run-title="Linux-ParallelTests-$CONDA_VERSION-Python$PYTHON_VERSION" "${PYTEST_REPLAY_OPTIONS[@]+"${PYTEST_REPLAY_OPTIONS[@]}"}"
    displayName: 'Parallel Tests'
    condition: and(succeeded(), eq('${{ parameters.serial_or_parallel }}', 'parallel'))

  - publish: $(Build.ArtifactStagingDirectory)/pytest-replay
    artifact: 'Linux-$(CONDA_VERSION)-Py$(PYTHON_VERSION)-${{ parameters.serial_or_parallel }}'
    condition: always()
